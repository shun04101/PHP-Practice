<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>ともすた</title>
	<atom:link href="https://tomosta.jp/feed/" rel="self" type="application/rss+xml" />
	<link>https://tomosta.jp</link>
	<description>学び。応援コミュニティ</description>
	<lastBuildDate>Tue, 12 Apr 2022 01:40:53 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	

<image>
	<url>https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/manabee_512.png?fit=32%2C32&#038;ssl=1</url>
	<title>ともすた</title>
	<link>https://tomosta.jp</link>
	<width>32</width>
	<height>32</height>
</image> 
<site xmlns="com-wordpress:feed-additions:1">200908896</site>	<item>
		<title>Vue CLI(Vue UI) + Vue Router + Vuex (+ vuex-persist) を使ってメモ帳アプリを作ろう</title>
		<link>https://tomosta.jp/article/vue3-vuex-vue-router/</link>
					<comments>https://tomosta.jp/article/vue3-vuex-vue-router/#respond</comments>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Fri, 08 Apr 2022 14:34:39 +0000</pubDate>
				<category><![CDATA[入門記事]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=21722</guid>

					<description><![CDATA[<p>この記事は、「これからはじめる人のJavaScript/Vue.jsの教科書」のVue3対応、アップデート記事です。本書をお持ちの方は、後半の記事を以下の記事に差し替えてご利用ください。 Vue.jsは、JavaScri [&#8230;]</p>
The post <a href="https://tomosta.jp/article/vue3-vuex-vue-router/">Vue CLI(Vue UI) + Vue Router + Vuex (+ vuex-persist) を使ってメモ帳アプリを作ろう</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<p>この記事は、「<a href="https://amzn.to/3KmetkM" target="_blank" rel="noreferrer noopener" title="これからはじめる人のJavaScript/Vue.jsの教科書">これからはじめる人のJavaScript/Vue.jsの教科書</a>」のVue3対応、アップデート記事です。本書をお持ちの方は、後半の記事を以下の記事に差し替えてご利用ください。</p>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe title="Vue 3 + Vuex + VueRouterでメモ帳アプリを作ってみよう 【プログラミングレシピ】" width="1220" height="686" src="https://www.youtube.com/embed/iqe8HPJuY80?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p><a href="https://v3.ja.vuejs.org/">Vue.js</a>は、JavaScriptと組み合わせて利用できる「フレームワーク」の1つで、簡単な手続きで本格的なウェブアプリを構築できるのが特徴です。</p>



<p>現在でも活発に開発されていて、2020年には最新のVue 3がリリースされました。</p>



<p>ここでは、そんなVue 3を利用し、複数ページを制御できるVue Router、データの管理を行うVuexと、ローカルストレージにデータを保存できるvuex-persistを利用した、メモ帳アプリの開発を紹介しましょう。</p>



<div class="wp-block-ideabox-toc ib-block-toc" data-anchors='h2,h3,h4,h5,h6' data-collapsable='true' ><div class="ib-toc-container ib-toc-list-style-numbers ib-toc-hierarchical ib-toc-expanded"><div class="ib-toc-header"><div class="ib-toc-header-title">Table of Contents</div><div class="ib-toc-header-right"><span class="ib-toc-icon-collapse"><span class="dashicon dashicons dashicons-minus"></span></span><span class="ib-toc-icon-expand"><span class="dashicon dashicons dashicons-plus"></span></span></div></div><div class="ib-toc-separator" style="height:2px"></div><div class="ib-toc-body"><ol class="ib-toc-anchors"></ol></div></div></div>



<h2>Vue CLI/Vue UIを利用しよう</h2>



<p>Vueには、コマンドラインでVueのさまざまな操作を行える「Vue CLI（Command Line Interface）」と、そのVue CLIをブラウザー上で操作できる「Vue UI（User Interface）」というツールが提供されています。</p>



<p>まずはこれをインストールしておきましょう。なお、この操作には「Node.js」の「npm」というツールが必要です。もし、まだインストールしていない場合や、次のコマンドを入力した時に「Command Not Found（コマンドが見つかりません）」などのエラーメッセージが表示された場合は、次のサイトからプログラムをダウンロードして、先にNode.jsとnpmをインストールしておきましょう。</p>



<pre class="wp-block-code"><code>node -v</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21728" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-95/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21728" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="12/04/22 01:40:53"><a href="https://nodejs.org/ja/" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/nodejs.org/static/images/logo-hexagon-card.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Node.js</div><div class="wp-oembed-blog-card__description">Node.js® is a JavaScript runtime built on Chrome</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://nodejs.org//static/images/favicons/favicon.ico" alt="">nodejs.org</div></div></a></div>
</div></figure>



<p>Node.jsやnpmについて詳しくは、次の記事もご参照ください。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="12/04/22 01:40:53"><a href="https://tomosta.jp/article/npm_volta/" target="_self"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2020/10/tomosta-ogp2.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">npmってなに？ Node.jsのバージョンを切り替えられるVolta / nとyarnも紹介 | ともすた</div><div class="wp-oembed-blog-card__description">プログラミングやウェブ開発でよく利用される「npm」や「yarn」はなにか、Node.jsのバージョンを切り替えられるVoltaやnとともに紹介します。</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/manabee_512.png?fit=32%2C32&#038;ssl=1" alt="">tomosta.jp</div></div></a></div>
</div></figure>



<h2>Vue CLIをインストールしよう</h2>



<p>それでは、Vue CLIをインストールしましょう。macOSの場合はFinderから「アプリケーション→ユーティリティ→ターミナル」を起動します。Windowsの場合は、スタートボタンを右クリックして「Microsoft Terminal（Win10以前の場合はPowerShellまたはコマンドプロンプト）」を起動しましょう。そしたら、次のようにコマンドを入力します。</p>



<pre class="wp-block-code"><code>npm i -g @vue/cli</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21730" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-1-21/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21730" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-1.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これでVue CLIがインストールされました。続けて、次のようにコマンドを入力してインストールされているかを確認しましょう。</p>



<pre class="wp-block-code"><code>vue --version</code></pre>



<p>図のように表示されていれば、利用できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21731" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-2-19/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21731" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-2.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>Vue UIを起動しよう</h2>



<p>それでは、Vueのプロジェクトを管理する「Vue UI」を起動してみましょう。次のようにコマンドを入力します。</p>



<pre class="wp-block-code"><code>vue ui</code></pre>



<p>ウェブブラウザーが起動して、図のような画面が表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21732" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-3-17/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21732" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-3.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>もし画面が違う場合は、図のボタンでホームに戻っておきましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21735" data-permalink="https://tomosta.jp/image-4-16/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?fit=640%2C360&amp;ssl=1" data-orig-size="640,360" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?fit=640%2C360&amp;ssl=1" loading="lazy" width="640" height="360" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?resize=640%2C360&#038;ssl=1" alt="" class="wp-image-21735" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?w=640&amp;ssl=1 640w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-4-edited.png?resize=300%2C169&amp;ssl=1 300w" sizes="(max-width: 640px) 100vw, 640px" data-recalc-dims="1" /></figure>



<h2>新しいプロジェクトを作成しよう</h2>



<p>ここでは、Vueのプロジェクトを作成できます。Vue自身は既存のHTMLファイルに後から組み込んで利用する事もできる、非常に手軽なフレームワークです。</p>



<p>しかし、その場合はこの後紹介する「コンポーネント」を作成するフォルダーの名前をなににするかなどのルールを自分で決めなければなりません。それでは、チームで開発する時などにルールを統一するのに手間がかかってしまうでしょう。</p>



<p>そこで、Vueでは標準としてフォルダー名の命名規則やファイル名の命名規則などを定め、それに沿った基本ファイル群を一気に生成してくれるビルドツールが提供されています。これをブラウザー上から利用できるのが「Vue UI」なのです。</p>



<p>では、ホームに戻ったら、図の「作成」ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21737" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-5-16/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21737" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-5.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>プロジェクトを作成したいフォルダーを選んで、画面下の「ここに新しいプロジェクトを作成する」ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21738" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-6-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21738" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-6.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「プロジェクトフォルダ」にプロジェクトを作成するフォルダー名を入力します。</p>



<p>パッケージマネージャーはデフォルトを選びましょう（npmが利用されます）。これは、この後登場する「サーバー」を利用したりする際の管理ツールを指定するものです。ここでは、この記事の冒頭でインストールした「Node.js」の「npm」を引き続き利用します。他にyarnやpnpmなどが利用できますがここでは説明を省略します。</p>



<p>追加オプションはOFFのままで良いでしょう。「Gitリポジトリ」は、「バージョン管理システム」の利用の有無になります。ここでは説明を省略するので、知らないという方はOFFにしておくと良いでしょう。「次へ」をクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21740" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-7-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-7" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21740" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-7.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>次に、Vueのバージョンなどを選ぶことができます。ここでは、「Default (Vue 3）」を選びましょう。「プロジェクトを作成する」ボタンをクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21741" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-8-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-8" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21741" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-8.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>しばらく待つと、図のようなプロジェクトダッシュボードが起動します。これで準備完了です。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21742" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-9-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-9" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21742" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-9.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>サーバーを起動しよう</h2>



<p>Vue CLI（Vue UI）で作成したプロジェクトには、簡易的なサーバー機能が搭載されています。開発中は、常にこのサーバーを起動した状態で行って行きます。</p>



<p>それでは、図のボタンをクリックしてタスクの中から「serve」を選びましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21744" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-10-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-10" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21744" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-10.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「タスクの実行」ボタンをクリックすると、サーバーが起動して図のような画面になります。もしここで、エラーなどが表示された場合は、他のサーバーが起動していないかなどを確認して、コンピューターを再起動するなどしてみてください。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21745" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-11-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-11" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21745" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-11.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>正常に起動したら、図の「アプリを開く」ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21746" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-12-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-12" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21746" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-12.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>図のような画面が表示されれば、サンプルで作成されたアプリが起動しています。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21748" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-13-10/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-13" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21748" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-13.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>ファイルの構成を確認しよう</h2>



<p>それでは、ここで作られたプロジェクトフォルダーの内容を確認していきましょう。Visual Studio Codeなどの開発エディターを利用すると便利でしょう。</p>



<h3>node_modules</h3>



<p>ここにVueの本体や、この後インストールするプラグインの本体ファイルなどが格納されます。このフォルダーを手で操作することはあまりありません。</p>



<h3>public</h3>



<p>ウェブサーバーが最初に確認するフォルダーです。この中には「index.html」が含まれていて、次のような内容が記述されています。</p>



<pre class="wp-block-code"><code>&lt;noscript&gt;
  &lt;strong&gt;We're sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn't work properly without JavaScript enabled. Please enable it to continue.&lt;/strong&gt;
&lt;/noscript&gt;
&lt;div id="app"&gt;&lt;/div&gt;
&lt;!-- built files will be auto injected --&gt;</code></pre>



<p>JavaScriptが動作しない環境で起動した時に表示されるメッセージと、<code>&lt;div id="app"&gt;&lt;/div&gt;</code>というdiv要素だけがありますが、この「app」というid属性が後で重要な意味を持ちます。ここに、実際のプログラムの内容が表示されます。</p>



<p>もう1つ作られている「favicon.ico」は、ブラウザーのタブに表示されるアイコンです。実際に自分で利用するアイコンに差し替えるか、なければ削除してしまって良いでしょう。その場合は、「index.html」の次の記述も削除しておきましょう。</p>



<pre class="wp-block-code"><code>&lt;link rel="icon" href="&lt;%= BASE_URL %&gt;favicon.ico"&gt;</code></pre>



<h3>src</h3>



<p>このフォルダーが、普段開発する時に作業するフォルダーになります。標準では<code>App.vue</code>と<code>main.js</code>というファイルが含まれています。これについては、この後紹介していきます。さらに、サブフォルダーがいくつかあります。</p>



<h3>src/assets</h3>



<p>プロジェクト内で利用する画像ファイルや、CSSファイルなどを配置するフォルダーです。標準では、<code>logo.png</code>という画像ファイルが入っていますが、これは不要なので削除しておきましょう。</p>



<h3>src/components</h3>



<p>「コンポーネント」と呼ばれる、共通パーツを入れるフォルダーです。標準ではサンプルの<code>HelloWorld.vue</code>というファイルが配置されていますが、これは不要なので削除しておきます。</p>



<p>その他、次のファイルが配置されています。</p>



<p>・.gitignore: Gitで「無視」をするファイルのリスト<br>・babel.config.js: Babelというビルドツールで利用する設定ファイル<br>・jsconfig.json: ビルドツールのJavaScriptビルドの設定<br>・package.json: npmのパッケージを設定するファイル<br>・README.md: プロジェクトのドキュメントなどを記載するファイル<br>・vue.config.js: Vueの設定ファイル<br>・yarn.lock: Yarnというツールの設定ファイル</p>



<p>いずれも特に編集などは必要ないので、このままにしておきましょう。</p>



<h2>vue-routerをインストールしよう</h2>



<p>ウェブサイトを見ていると、見ているページによって、アドレスが次のように変化することがあります。</p>



<pre class="wp-block-code"><code>https:&#47;&#47;example.com/
↓
https://example.com/new</code></pre>



<p>サーバーは、このようなアドレスを確認して、どのような情報をウェブブラウザーに渡すかというのを判断しています。これを「ルーティング」といい、Vueではこのようなルーティングを行うためのプラグインが提供されていて、簡単に実装できます。</p>



<p>ここでは「Vue Router」をインストールしてみましょう。Vueでは、プラグインのインストールなどもVue UI上で行えます。</p>



<p>Vue UIを起動して、「プロジェクトダッシュボード」にアクセスしましょう。</p>



<p>「プラグイン」ボタンをクリックすると、今インストールされているプラグインが一覧されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21749" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-14-10/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-14" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21749" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-14.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここで新しいプラグインを追加します。Vue Routerは、よく利用されるため画面上部に直接インストールできるボタンが準備されています。これをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21750" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-15-10/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-15" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21750" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-15.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>インストールが完了すると、いくつかのファイルが追加されたり、ファイルが勝手に変更されたりします。特に<code>App.vue</code>や<code>main.js</code>の内容は勝手に書き換わってしまうため、開発をはじめる前にインストールしておいた方が良いでしょう。</p>



<p>また、インストールしたら一度サーバーを再起動しておきましょう。タスクの「serve」で、一度サーバーを停止してから再度起動します。</p>



<h2>Vue Routerで追加されるファイル群</h2>



<p>Vue Routerをインストールすると、いくつかファイルが追加されたり、変更されます。</p>



<h3>/src/route</h3>



<p><code>index.js</code>というファイルが配置されていて、ここでルーティングの設定が行われます。</p>



<h3>/src/views</h3>



<p>「ビューファイル」と呼ばれるパーツファイル群です。各URLを表示したときに表示される画面ごとのHTMLなどが含まれています。</p>



<h3>/src/App.vue</h3>



<p>合わせて<code>/src/App.vue</code>ファイルの画面上部にナビゲーション要素が追加されます。</p>



<h2>メモの作成画面を作ろう</h2>



<p>それではまずは、メモを作成する画面を作りましょう。<code>src/App.vue</code>を編集して、次の部分を確認しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/App.vue

  &lt;nav&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link to="/about"&gt;About&lt;/router-link&gt;
  &lt;/nav&gt;</code></pre>



<p>ここでは、画面上部のナビゲーション要素を構築しています。ここで利用している<code>router-link</code>という要素は、Vue Routerをインストールすると利用できる要素で、リンク（<code>&lt;a&gt;</code>）を作ることができます。</p>



<p>Vue Routerを利用している場合、HTMLの<code>&lt;a&gt;</code>要素をそのまま利用してしまうと、ルーティングが正しく行われなくなってしまうため、代わりに<code>&lt;router-link&gt;</code>を利用します。<code>class</code>属性などの各種属性はそのまま利用できますが、リンク先を示す属性は<code>href</code>ではなく、<code>to</code>になります。</p>



<p>それではここに、新しいメモを作成する画面を示す<code>/new</code>を追加してみましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/App.vue

  &lt;nav&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    <strong>&lt;router-link to="/new"&gt;New&lt;/router-link&gt; |</strong>
    &lt;router-link to="/about"&gt;About&lt;/router-link&gt;
  &lt;/nav&gt;</code></pre>



<p>すると、ナビゲーションに「New」が追加されました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21753" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-16-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-16" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21753" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-16.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ただし、現状ではクリックしてもなにも起こりません。Chromeの開発者ツールを確認すると、コンソールに次のように表示され、<code>/new</code>というパスがないことが分かります。</p>



<blockquote class="wp-block-quote"><p>[Vue Router warn]: No match found for loccation with path &#8220;/new&#8221;</p></blockquote>



<h3>ルートを設定しよう</h3>



<p>では、この<code>/new</code>というパスを準備しましょう。<code>/src/router/index.js</code>ファイルを開きます。</p>



<p>ここで、各パスの設定と、どんな内容が表示されるかを設定します。標準では、<code>/</code>と<code>/about</code>というパスが設定されていて、それぞれ「HomeView.vue」と「AboutView.vue」が利用される設定になっています。ここに、<code>/new</code>の設定を追加しましょう。</p>



<p>10行目付近に、次のように追加します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/router/index.js

{
  path: '/new',
  name: 'new',
  component: NewView
},</code></pre>



<p>そして、「NewView」という定義をファイルの先頭に記述して、ここではこの後作成する「NewView.vue」というファイルと紐付けます。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/router/index.js

import NewView from '../views/NewView.vue'</code></pre>



<p>これでブラウザーに切り替えると、次のようなエラーメッセージが表示されます。</p>



<blockquote class="wp-block-quote"><p>Module not found: Error: Can&#8217;t resolve &#8216;../views/NewView.vue&#8217; in &#8216;/Users/seltzer/Sandbox/memopad-demo/src/router&#8217;</p></blockquote>



<p>これは、まだ「NewView.vue」ファイルが準備されていないためです。続いてこれを作成しましょう。</p>



<h3>ビューファイルを準備しよう</h3>



<p><code>/src/views/</code>フォルダーに、新しく「NewView.vue」というファイルを作成します。</p>



<p>次のように入力しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/NewView.vue

&lt;template&gt;
  &lt;h2&gt;New&lt;/h2&gt;
  &lt;div&gt;&lt;input type="text"&gt;&lt;/div&gt;
  &lt;div&gt;&lt;textarea&gt;&lt;/textarea&gt;&lt;/div&gt;
  &lt;div class="center"&gt;
    &lt;button&gt;保存&lt;/button&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre>



<p>これで画面を表示すると、図のようなフォームが表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21755" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-17-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-17" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21755" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-17.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ビューファイルでは、HTMLの基本タグ（DOCTYPEやbodyタグなど）は記述する必要がありません。これらは、<code>/public/index.html</code>に記述されている内容が利用されます。</p>



<p>代わりに、要素全体を<code>&lt;template&gt;</code>という特別なタグで囲む必要があります。内容は通常のHTMLがそのまま利用できます。</p>



<h3>スタイルを調整しよう</h3>



<p>今度はスタイルシートで少し調整していきましょう。スタイルシートは、外部のCSSファイルで制御することもできますが、ファイル内に記述してしまうと便利です。次のように<code>&lt;style&gt;</code>タグを追加しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/view/NewView.vue

&lt;style scoped&gt;
div {
  margin-bottom: 10px;
}
input&#91;type=text] {
  width: 100%;
}
textarea {
  width: 100%;
  height: 30em;
}
button {
  width: 5em;
  margin: 3px;
}
.center {
  text-align: center;
}
&lt;/style&gt;</code></pre>



<p><code>&lt;style&gt;</code>タグには<code>scoped</code>という特殊な属性が付加されています。これは、「このファイル（コンポーネント）のみに適用するCSS」という事を示す属性で、これがないとすべての画面でスタイルが有効になってしまうため、特別な理由がなければ必ず付加しておきましょう。</p>



<h3>全体のスタイルシートも調整しよう</h3>



<p>全体のスタイルシートは<code>/src/App.vue</code>内で定義されています。すべて削除しても良いですが、ここでは一部を活かして、次のように調整しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/App.vue

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2c3e50;
  max-width: 600px;
  margin: 0 auto;
}

h1 {
  text-align: center;
}

nav {
  padding: 30px;
  text-align: center;
}

nav a {
  font-weight: bold;
  color: #2c3e50;
}

nav a.router-link-exact-active {
  color: #42b983;
}
&lt;/style&gt;</code></pre>



<p>図のような画面になれば、これで登録画面の完成です。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21757" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-18-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-18" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21757" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-18.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>フォームをコンポーネントにしよう</h2>



<p>ここで作成したフォームは、この後作成する編集画面でも利用します。そのため、両方の画面で利用できるように「コンポーネント」にまとめておくことができます。コンポーネントは<code>/src/components/</code>フォルダーにファイルを作成します。ここでは、<code>MemoForm.vue</code>を作成しましょう。</p>



<p>そして、<code>/src/views/NewView.vue</code>の内容をすべてコピーします。<code>name</code>を登録しておきましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/componenets/MemoForm.vue

&lt;script&gt;
export default {
  name: 'MemoForm'
}
&lt;/script&gt;</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21759" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-19-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-19" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21759" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-19.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>空っぽになった、<code>/src/views/NewView.vue</code>では、今作成したコンポーネントを利用するように次のように記述します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/NewView.vue

&lt;template&gt;
  &lt;MemoForm /&gt;
&lt;/template&gt;

&lt;script&gt;
import MemoForm from '@/components/MemoForm.vue'
export default {
    name: 'NewView',
    components: {
        MemoForm
    }
}
&lt;/script&gt;</code></pre>



<p>作成したファイルをインポートして、これを<code>components</code>に宣言します。すると、<code>&lt;MemoForm /&gt;</code>として利用できるようになります。</p>



<p>これで再度動作を確認して、正しく動作していることを確認しましょう。これでコンポーネントに分けることができました。他の画面でも利用できるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21761" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-20-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-20" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21761" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-20.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>Vuexで状態管理をしよう</h2>



<p>ここで、作成したメモのデータはどこに保存したら良いでしょう？　Vueだけを利用する場合には変数などに記憶しておくだけでよいですが、Vue Routerを利用した複数のページ構成があるプロジェクトの場合、変数に保存するだけでは画面を移動した時に消えてしまいます。</p>



<p>そこで、「状態管理」というしくみを使います。これには、状態管理ライブラリーを利用すると良いでしょう。Vueでは「Vuex」というしくみがよく使われています。</p>



<p>それでは、このプラグインをインストールしましょう。Vue UIで「プラグイン」を選びます。Vuexも非常によく使われるライブラリーなため、画面上部にボタンがあるのでこれをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21763" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-21-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-21" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21763" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-21.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>インストールが終わると、次のファイルが追加・変更されています。</p>



<h3>/src/store/index.js</h3>



<p>Vuexの「ストアー」というしくみを利用するためのファイルです。あらかじめ必要な記述が含まれているので、ここにプログラム内容などを書き加えていくことになります。</p>



<h3>main.js</h3>



<p>Vuexを利用するための宣言が追加されます。</p>



<p>それでは、Vuexを利用してみましょう。</p>



<h2>Vuexにデータを保存しよう</h2>



<p>それでは、Vuexにデータを保存してみましょう。まずは、フォームとの連携はせずに「ボタンを押したらてきとうなデータが保存される」というところまで作成してみましょう。</p>



<p><code>/src/store/index.js</code>をエディターで開きます。ここには、次のような記述が続いています。</p>



<ul><li>state: アプリケーション全体でアクセスできるデータを宣言します</li><li>getters: stateの内容を取得するためのメソッドを定義します</li><li>mutations: stateの内容に変化を与えるためのメソッドを定義します</li><li>actions: 非同期処理をするための処理を定義します</li><li>modules: 処理をモジュールに分割した時の処理を定義します</li></ul>



<p>この記事では、「actions」「modules」については触れませんので、公式リファレンスなどをご参照ください。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="12/04/22 01:40:53"><a href="https://vuex.vuejs.org/ja/" target="_blank"><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Vuex とは何か？ | Vuex</div><div class="wp-oembed-blog-card__description">Vue.js のための集中状態管理</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://i0.wp.com/vuex.vuejs.org//logo.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1">vuex.vuejs.org</div></div></a></div>
</div></figure>



<p>まずは、「state」に保存する内容の入れ物を定義します。ここでは、メモを保管するための「memos」という配列を準備しましょう。次のように書き加えます。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

state: {
  memos: &#91;]
},</code></pre>



<p>そしたら、このステートにメモの内容を保存するための処理を「mutations」に定義します。次のように追加しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

mutations: {
    /* メモを保存する */
    save (state, newMemo) {
      state.memos.unshift(newMemo)
    }
}</code></pre>



<p>これで準備完了です。定義した「memos」というステートにアクセスするには<code>state.memos</code>と記述します。これは先に配列として定義したため<code>unshift</code>メソッドを使って、先頭に要素を追加しました。</p>



<p>mutationsの定義では、1つめのパラメーターとして「state」を指定する決まりがあります。実際のパラメーターは2つめ以降に指定しましょう。</p>



<p>これで準備完了です。</p>



<h3>イベントを定義しよう</h3>



<p>では次に、<code>/src/components/MemoForm.vue</code>を編集して、ボタンをクリックしたらデータが保存されるようにしましょう。</p>



<p>まずは、<code>MemoForm.vue</code>にJavaScriptの決まり文句を記述します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

&lt;script&gt;
export default {
}
&lt;/script&gt;</code></pre>



<p>ここに処理を追加します。なお、この記事ではVueの基本的な内容は省略するため、あいまいな場合はVue自体についての学習をしてみましょう。</p>



<p>ここでは、ボタンをクリックした時のメソッドを定義します。先ほど記述した決まり文句の中に記述します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

methods: {
  save() {
    let memo = {
      title: 'メモのタイトルです',
      content: 'メモの内容です'
    }

    this.$store.commit('save', memo)
  }
}</code></pre>



<p>mutationsに定義したミューテーションには、<code>this.$store.commit</code>というメソッドを使って呼び出します。1つめのパラメーターにミューテーションの名前、2つめ以降のパラメーターに必要なパラメーターを指定します。ここでは、仮の内容を作って指定しました。</p>



<p>そしたらこのメソッドを、「保存」ボタンをクリックするタイミングで発動させます。ボタンを次のように変えましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

&lt;button<strong> @click="save"</strong>&gt;保存&lt;/button&gt;</code></pre>



<p>これで完成しました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21764" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-22-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-22" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21764" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-22.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>Vue.js devtoolsで動作を確認しよう</h3>



<p>これで、新しいメモを作成して「保存」ボタンをクリックすると、ストアにデータが保存されます。ただし現状では、その様子を確認することができません。</p>



<p>そこで、Google Chromeに「Vue.js devtools」という拡張機能をインストールしましょう。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="12/04/22 01:40:53"><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd/related?hl=ja" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://lh3.googleusercontent.com/Lu_6rc-5upC8g1v-SIBrYwQ8a-1blC81ZLSQss66IpTZ2_sinL7fP2ielWj3znVoIEtobNo-jlI39IV-7qnEvJWZb9A=w128-h128-e365-rj-sc0x00ffffff" alt=""></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Vue.js devtools</div><div class="wp-oembed-blog-card__description">Browser DevTools extension for debugging Vue.js applications.</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://i0.wp.com/ssl.gstatic.com/chrome/webstore/images/icon_48px.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1">chrome.google.com</div></div></a></div>
</div></figure>



<p>インストールすると、ツールバーに図のアイコンが追加されますが、実際には「開発者ツール」を起動して利用します。Vueで作成されたページを表示すると、開発者ツールに「Vue」というタブが追加されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21766" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-23-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-23" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21766" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-23.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここで、動作しているプログラムのさまざまな情報が確認できます。Vuexタブをクリックしましょう。図のようにステートの内容が表示され、データが追加されている様子が確認できます。</p>



<p>保存ボタンをクリックしてみましょう。devtoolsの様子が変化することが分かります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21767" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-24-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-24" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21767" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-24.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>フォームと接続しよう</h2>



<p>では、実際にフォームと接続しましょう。まずは、<code>data</code>を定義します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

<strong>  data() {
    return {
      title: '',
      content: ''
    }
  },</strong>
  methods: {
  ...</code></pre>



<p>そして、これを<code>v-model</code>ディレクティブでフォームの項目と接続します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue
  
&lt;div&gt;&lt;input type="text" v-model="title"&gt;&lt;/div&gt;
&lt;div&gt;&lt;textarea v-model="content"&gt;&lt;/textarea&gt;&lt;/div&gt;</code></pre>



<p>これで、フォームに入力した内容を扱えるようになります。<code>save</code>メソッドの内容を変更して、フォームの内容を保存するように変更しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

save() {
  let memo = {
    title: this.title,
    content: this.content
  }

  this.$store.commit('save', memo)
}</code></pre>



<p>これで、実際にフォームに入力した内容がストアに保存されるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21769" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-25-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-25" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21769" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-25.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>IDを挿入しよう</h3>



<p>複数のデータがある場合は、それを特定できる「キー」を設定しておくと、後で扱いやすくなります。ここでは、ストアのミューテーションでIDを割り振れるようにしましょう。まずは、件数を記録する<code>count</code>というステートを定義しておきます。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

state: {
  count: 0,
  memos: &#91;]
},</code></pre>



<p>そしたら、保存するメモの内容にIDを指定してから保存します。これは、<code>count</code>を1ずつ加えながら、新しいIDを割り振っていきましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

save (state, newMemo) {
  newMemo.id = ++this.state.count
  state.memos.unshift(newMemo)
}</code></pre>



<p>こうして、メモを保存すると新しいIDが割り振られてストアに保存されていきます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21770" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-26-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-26" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21770" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-26.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>トップページに戻そう</h3>



<p>現状では、新しいメモを保存しても画面がそのままのため、同じメモが何度も保存されてしまいます。そこで、保存できたらホームの画面に移動しましょう。これには、<code>$router.push</code>というメソッドを使います。<code>save</code>メソッドに以下のように追加しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

save() {
...
  this.$router.push('/')
}</code></pre>



<h2>一覧画面を作成しよう</h2>



<p>続いて、保存したメモを一覧できる画面を作成しましょう。これは、このプロジェクトのトップページに実装したいため、すでに準備されている<code>HomeView.vue</code>を変更していきましょう。</p>



<p>次のようにファイルに書き込みます。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/HomeView.vue

&lt;template&gt;
  &lt;div class="home"&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre>



<p>ここに、ストアに保存されているメモの一覧を表示しましょう。JavaScriptを記述していきます。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/HomeView.vue

&lt;script&gt;
export default {
  name: 'HomeView',
  computed: {
    memos () {
      return this.$store.state.memos
    }
  }
}
&lt;/script&gt;</code></pre>



<p>ここでは、「computed」にストアのメモの配列を取得するための「memos」を定義しました。これを使って、<code>v-for</code>ディレクティブを作成していきます。</p>



<p><code>&lt;li&gt;</code>タグを次のように変更しましょう。</p>



<pre class="wp-block-code"><code>// /src/views/HomeView.Vue

&lt;li v-for="memo in memos" :key="memo.id"&gt;
  {{ memo.title }}
&lt;/li&gt;</code></pre>



<p>これでブラウザーを確認してみましょう。現状ではストアの内容が空っぽに戻ってしまうため、画面が真っ白になってしまいます。「New」をクリックして、何度か保存ボタンをクリックしてから、「Home」に戻ってみましょう。一覧が表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21772" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-27-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-27" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21772" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-27.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>メモがないときの画面を作成しよう</h3>



<p>メモが一件もない場合、現状では画面が真っ白になってしまいます。そこで、<code>v-if</code>ディレクティブを使ってメモがある時の表示とない時の表示を切り替えましょう。<code>/src/views/HomeView.vue</code>を次のように変更します。</p>



<pre class="wp-block-code"><code>// /src/view/HomeView.vue

&lt;div class="home"&gt;
&lt;ul v-if="hasMemos"&gt;
  &lt;li v-for="memo in memos" :key="memo.id"&gt;
    {{ memo.title }}
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p v-else&gt;メモはありません&lt;/p&gt;
&lt;/div&gt;</code></pre>



<p>「hasMemos」は、「computed」で次のように宣言します。</p>



<pre class="wp-block-code"><code>// /src/views/HomeView.vue

hasMemos() {
  return this.$store.state.memos.length
}</code></pre>



<h3>ゲッターを宣言しよう</h3>



<p>ストアーには「ゲッター」を宣言することができます。これは、ステートの値を取得するための専用のメソッドです。先のプログラムで、メモの件数を取得するのに、直接配列の<code>length</code>プロパティを使って件数を調べていましたが、このような場合はゲッターを宣言しておいた方が、後でプログラムを拡張したりするときに拡張しやすくなります。</p>



<p>そこで、ここでは<code>getCount</code>というゲッターを宣言してみましょう。</p>



<p><code>/src/store/index.js</code>を編集しましょう。<code>getters</code>の部分に次のように定義します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

getters: {
    getCount: (state) =&gt; {
      return state.memos.length
    }
}</code></pre>



<p>そしたら、<code>/src/views/HomeView.vue</code>の中では次のように、このゲッターを呼び出して利用します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/HomeView.vue

    hasMemos() {
      return this.$store.getters.getCount
    }</code></pre>



<p>これで、メモの件数を取得でき、それによってリストの表示を変えられるようになりました。</p>



<h3>スタイルを調整しよう</h3>



<p>最後に<code>HomeView.vue</code>ファイルのスタイルを調整しておきましょう。次のように追加します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/HomeView.vue

&lt;style scoped&gt;
ul {
  margin: 0;
  padding: 0;
}
li {
  list-style: none;
  border-bottom: 1px solid #ccc;
  padding-bottom: 10px;
  margin-bottom: 10px;
}

li a {
  color: #999;
  text-decoration: none;
  width: 100%;
  display: block;
}
&lt;/style&gt;</code></pre>



<p>これで、一覧画面の完成です。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21773" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-28-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-28" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21773" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-28.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>詳細・編集画面を作成しよう</h2>



<p>続いて、一覧画面からメモをクリックしたら、内容を確認したり修正・削除できる画面を作りましょう。ここでは、新しいルート定義として<code>/edit</code>を定義します。</p>



<p><code>/src/router/index.js</code>ファイルを編集します。15行目付近に次のように追加しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/router/index.js

{
  path: '/edit',
  name: 'edit',
  component: EditView
},</code></pre>



<p>ファイルの先頭にコンポーネントの宣言も追加します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/router/index.js

import EditView from '../views/EditView.vue'</code></pre>



<p>そしたら、ここで宣言した<code>EditView.vue</code>ファイルを作成しましょう。次のように内容を追加します。</p>



<pre class="wp-block-code"><code>// /src/views/EditView.vue

&lt;template&gt;
Edit View
&lt;/template&gt;</code></pre>



<p>次のようにアドレスを直接指定すると、「Edit」などと表示されていれば完了です。</p>



<blockquote class="wp-block-quote"><p><div class="js-wp-oembed-blog-card wp-oembed-blog-card"><a class="js-wp-oembed-blog-card__link" href="http://localhost:8080/#/edit" target="_blank">http://localhost:8080/#/edit</a></div></p></blockquote>



<figure class="wp-block-image size-large"><img data-attachment-id="21775" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-29-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-29" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21775" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-29.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>パラメーターを受け取ろう</h3>



<p>ここで、編集画面では「どのメモを表示するか」を指定する必要があります。このような場合、通常のウェブのシステムではアドレスにIDなどを指定する設計にする事が多いでしょう。</p>



<p>例）</p>



<blockquote class="wp-block-quote"><p><a href="http://localhost:8080/#/edit/1" rel="nofollow">http://localhost:8080/#/edit/1</a><br><a href="http://localhost:8080/#/edit/2" rel="nofollow">http://localhost:8080/#/edit/2</a></p></blockquote>



<p>このようなアドレスを指定できるようにするには、ルートの定義でパラメーターを受け取れるようにします。<code>/src/router/index.js</code>を編集しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/router/index.js

  path: '/edit/:id',</code></pre>



<p>これで、上記のようなアドレスが指定できます。今度はここで指定された内容をプログラムで利用できるようにしましょう。</p>



<p>アドレスで指定されたパラメーターを利用するには<code>$route.params.（パラメーター名）</code>として利用できます。例えばここでは、<code>id</code>というパラメーター名で定義しているので、次のようにすると画面にパラメーターを表示することができます。</p>



<pre class="wp-block-code"><code>// /src/views/EditView.vue

Edit view: {{ $route.params.id }}</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21776" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-30-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-30" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21776" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-30.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>メモを呼び出そう</h3>



<p>こうして、アドレスで特定のメモを指定できるようになったので、これを呼び出して取り出せるようにしましょう。</p>



<p>まずは、ストアでゲッターを定義します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

getMemoById: (state) =&gt; (id) =&gt; {
  return state.memos.find(memo =&gt; memo.id === id)
},</code></pre>



<p>配列の<code>find</code>メソッドを使って、指定されたidと一致するメモを取得することができます。これを使って、編集画面でメモを取り出してみましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/EditView.vue

&lt;script&gt;
export default {
  name: 'EditView',
  computed: {
    memo() {
      let id = parseInt(this.$route.params.id)
      return this.$store.getters.getMemoById(id)
    }
  }
}
&lt;/script&gt;</code></pre>



<p>これで<code>memo</code>で内容を取得できるようになったので、<code>&lt;template&gt;</code>内を次のように変更しましょう。</p>



<pre class="wp-block-code"><code>// /src/views/EditView.vue

&lt;template&gt;
{{ memo.title }}
&lt;/template&gt;</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21779" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-31-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-31" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21779" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-31.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>一覧画面と連携しよう</h3>



<p>ここまでできたら、一覧画面でメモをクリックしたら画面が切り替わるようしましょう。次のように<code>&lt;router-link&gt;</code>でリンクを張ります。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/HomeView.vue
&lt;router-link :to="{ name: 'edit', params: { id: memo.id } }"&gt;{{ memo.title }}&lt;/router-link&gt;</code></pre>



<p><code>&lt;router-link&gt;</code>でパラメーターを渡す場合は、定義したルートの名前などを利用して指定する必要があります。これで、次のようなアドレスが作られるようになります。</p>



<blockquote class="wp-block-quote"><p><div class="js-wp-oembed-blog-card wp-oembed-blog-card"><a class="js-wp-oembed-blog-card__link" href="http://localhost:8080/#/edit/1" target="_blank">http://localhost:8080/#/edit/1</a></div></p></blockquote>



<h3>コンポーネントに表示しよう</h3>



<p>続いて、メモ作成画面で作ったコンポーネントを使って、編集画面に仕上げていきましょう。</p>



<p>まずは、コンポーネントにメモの情報を渡せるように変更していきます。コンポーネントが値を受け取れるようにするには<code>props</code>というしくみを利用します。次のように宣言しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue
  props: &#91;
    'memo'
  ],</code></pre>



<p>これにより、コンポーネントを呼び出すときに次のように属性を指定できるようになります。メモ作成画面を次のように変更しておきましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/NewView.vue

&lt;MemoForm :memo="" /&gt;</code></pre>



<p>これで準備完了です。</p>



<p>では、同じようにして<code>EditView.vue</code>を変更していきましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/EditView.vue

&lt;template&gt;
  &lt;MemoForm :memo="memo" /&gt;
&lt;/template&gt;

&lt;script&gt;
import MemoForm from '@/components/MemoForm.vue'
export default {
  name: 'EditView',
  components: {
    MemoForm
  },
  computed: {
    memo() {
      let id = parseInt(this.$route.params.id)
      return this.$store.getters.getMemoById(id)
    }
  }
}
&lt;/script&gt;</code></pre>



<p>これでコンポーネントに、メモの内容が渡されるようになったので、これを使ってフォームに初期値を設定していきます。再び<code>MemoForm.vue</code>を編集して、<code>data</code>の定義を次のように変更しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

  data() {
    return {
      title: this.memo.title,
      content: this.memo.content
    }
  },</code></pre>



<p>これで、メモの内容がフォームに反映されるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21781" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-32-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-32" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21781" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-32.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>パラメーターが正しくない場合の処理をしよう</h3>



<p>アドレスはユーザーが自由に書き換えられてしまうため、存在しないIDを指定してしまったり、いたずらでおかしな値を指定されることが考えられます。そこで、<code>v-if</code>ディレクティブを使ってコンポーネントの表示を制御しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/views/EditView.vue

&lt;MemoForm :memo="memo" v-if="memo" /&gt;
&lt;p v-else&gt;指定されたメモはありません&lt;/p&gt;</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="21782" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-33-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-33" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21782" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-33.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>メモを編集できるようにしよう</h2>



<p>現状では、編集フォームでメモの内容を変更すると、新しいメモとして登録されてしまいます。そこで、<code>save</code>メソッドを改良して、既存のメモの場合は内容を変更するようにしましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

save() {
  let memo = {
    title: this.title,
    content: this.content
  }

  if (this.memo.id) {
    memo.id = this.memo.id
  }

  this.$store.commit('save', memo)
  this.$router.push('/')
},</code></pre>



<p>既存のメモの場合、「memo.id」に値が挿入されているため、これを合わせてストアーのsaveに送るようにします。</p>



<p>そしたら、ミューテーションを次のように変更しましょう</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

save (state, newMemo) {
  if (newMemo.id) {
    let x = state.memos.find(memo =&gt; memo.id === newMemo.id)
    x.title = newMemo.title
    x.content = newMemo.content
  } else {
    newMemo.id = ++this.state.count
    state.memos.unshift(newMemo)
  }</code></pre>



<p>こちらも、<code>id</code>が渡された場合は、メモの変更になるので、既存の配列の内容を変更するように変更しました。これによって、メモの変更が行えるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21783" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-34-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-34" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21783" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-34.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>メモを削除しよう</h2>



<p>次は、メモの削除のしくみを作成しましょう。まずは、ストアで特定のデータを削除するミューテーションを定義します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

delete (state, id) {
  state.memos = state.memos.filter(memo =&gt; memo.id !== id)
}</code></pre>



<p>配列の<code>filter</code>メソッドを使って、指定されたID以外のデータだけを抽出し、それを改めてステートに保存し直します。これによって、IDで指定したメモのデータだけが除外されるというしくみです。</p>



<p>では、ここで作ったミューテーションを呼び出していきましょう。編集画面に「削除」ボタンを追加します。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

&lt;div class="center"&gt;
  &lt;button @click="save"&gt;保存&lt;/button&gt;
  &lt;button @click="remove" v-if="memo.id"&gt;削除&lt;/button&gt;
&lt;/div&gt;</code></pre>



<p><code>v-if</code>ディレクティブで、<code>memo.id</code>がある場合のみ、つまり編集画面の場合だけ、ボタンを表示するようにしました。クリックすると<code>remove</code>が呼び出されます。これを定義しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/components/MemoForm.vue

methods: {
  ...
  remove() {
    this.$store.commit('delete', this.memo.id)
    this.$router.push('/')
  }
}</code></pre>



<p>これで、メモが削除されるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21784" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-35-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-35" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21784" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-35.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>vue-persistでデータを保存しよう</h2>



<p>これで、メモ機能の一連の流れができあがりました。ただし、このメモツールは、ブラウザーを閉じたり、再読込するとデータが消えてしまいます。これは、JavaScriptの変数上にしかデータが存在していないためです。</p>



<p>そこで、このデータをブラウザーの「ローカルストレージ」と呼ばれる記憶領域に保存して、同じウェブブラウザー上であれば利用し続けられるようにしましょう。</p>



<p>これには、「vuex-persist」というライブラリを利用するのが簡単です。</p>



<p>Vue UIを起動したら、「依存」をクリックして「依存をインストール」をクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21785" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-36-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-36" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21785" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-36.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>検索窓に「vuex-persist」と入力して、ライブラリを探しましょう。これをインストールします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21786" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-37-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-37" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21786" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>vuex-persistを利用する場合は、ほとんど決まり文句を記述するだけです。ストアに、次のように追加しましょう。</p>



<pre class="wp-block-code"><code>&gt;&gt; /src/store/index.js

import { VuexPersistence } from 'vuex-persist'

...

const vuexPersist = new VuexPersistence({
  storage: localStorage
})

mutations: {
  RESTORE_MUTATION: vuexPersist.RESTORE_MUTATION,

...

  plugins: &#91;vuexPersist.plugin]</code></pre>



<p><code>vuex-persist</code>を利用して、保存先を「localStorage」に設定します。後は、ミューテーションの時にvuex-persistを利用するように設定しています。</p>



<p>これで、メモの内容がローカルストレージに移されます。Chromeの開発者ツールで「アプリケーション→ローカルストレージ」を確認すると、ストアの内容が記憶されていることが分かります。これでメモを作成すると、ブラウザーを終了して、再度起動しても内容が呼び戻されるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="21786" data-permalink="https://tomosta.jp/article/vue3-vuex-vue-router/attachment/image-37-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-37" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-21786" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/04/image-37.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これで、Vueを利用したメモツールが完成しました。さまざまな知識が出てきてややこしく感じますが、Vueの基本をしっかり押さえ、VuexとVuex Routerの使い方を学べば、さまざまなツールが開発できるようになるため、ぜひ利用してみましょう。</p>



<ul><li><a href="https://tomosta.jp/wp-content/uploads/2022/04/vue3-memopad-main.zip" title="">プログラムソースのダウンロードはこちら</a></li><li><a href="https://github.com/tomostajp/vue-memopad" target="_blank" rel="noreferrer noopener" title="GitHub">GitHub</a></li></ul>The post <a href="https://tomosta.jp/article/vue3-vuex-vue-router/">Vue CLI(Vue UI) + Vue Router + Vuex (+ vuex-persist) を使ってメモ帳アプリを作ろう</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
					<wfw:commentRss>https://tomosta.jp/article/vue3-vuex-vue-router/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">21722</post-id>	</item>
		<item>
		<title>npmってなに？ Node.jsのバージョンを切り替えられるVolta / nとyarnも紹介</title>
		<link>https://tomosta.jp/article/npm_volta/</link>
					<comments>https://tomosta.jp/article/npm_volta/#respond</comments>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Thu, 10 Mar 2022 04:37:18 +0000</pubDate>
				<category><![CDATA[入門記事]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=3107</guid>

					<description><![CDATA[<p>プログラミングやウェブ開発でよく利用される「npm」や「yarn」はなにか、Node.jsのバージョンを切り替えられるVoltaやnとともに紹介します。</p>
The post <a href="https://tomosta.jp/article/npm_volta/">npmってなに？ Node.jsのバージョンを切り替えられるVolta / nとyarnも紹介</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Voltaとn / npmとyarn - フロントエンドツールを知ろう" width="1220" height="686" src="https://www.youtube.com/embed/6WkjdxaBKgY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>プログラミングやウェブ制作を学習すると、次のような記述によく出会います。</p>



<pre class="wp-block-code"><code>npm install ...
yarn add ...</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3110" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-94/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3110" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これらの記述はいったい何を意味しているのでしょう？　これは「Node.js（ノードジェイエス）」を利用したコマンド。ここでは、このNode.jsの使い方とバージョンを管理するための「Volta」と「n」についてまとめて紹介していきましょう。</p>



<h2>JavaScriptは「ブラウザー上でしか動かない」</h2>



<p>Node.jsを理解するには、先にJavaScriptというプログラミング言語を知る必要があります。JavaScriptは、ウェブ制作などでよく利用されるプログラミング言語ですが「クライアントサイドスクリプト」などと呼ばれます。</p>



<p>例えば、こちらもよく利用される「PHP」や「Python」、「Ruby」などは「サーバーサイドスクリプト」などと言われますが、JavaScriptと大きく異なる点があります。</p>



<p>それは、「JavaScriptはブラウザーがないと動作できない」ということ。PHPやPythonは、自分のコンピューターにPHPやPythonをインストールすれば、直接動作させることができます。</p>



<p>しかし、JavaScriptは従来ウェブブラウザーにファイルを読み込ませない限り、動作しませんでした。これは、JavaScriptの「実行エンジン」と呼ばれるエンジンが、ウェブブラウザーに組み込まれて提供されているため。</p>



<p>Node.jsは、このJavaScript（正確にはECMAScript）の活用範囲を広げるべく、JavaScriptの実行エンジンをサーバーやコンピューターに提供するための実行環境です。</p>



<h2>Node.jsをインストールしよう</h2>



<p>Node.jsを利用すれば、ブラウザー上でしか動作しなかったプログラムを自分のコンピューター上で動作させたり、サーバー上で動作させることができ、JavaScriptの活用範囲が非常に広がります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3111" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-1-20/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3111" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-1.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そして今、このNode.jsを利用したさまざまなアプリケーションが提供されているのです。</p>



<p>Node.jsを利用するには、次の公式サイトからインストールプログラムをダウンロードしてインストールする方法があります。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="12/04/22 01:40:53"><a href="https://nodejs.org/ja/" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/nodejs.org/static/images/logo-hexagon-card.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Node.js</div><div class="wp-oembed-blog-card__description">Node.js® is a JavaScript runtime built on Chrome</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://nodejs.org//static/images/favicons/favicon.ico" alt="">nodejs.org</div></div></a></div>
</div></figure>



<p>ただし、実際には後述する「Volta」や「n」を使ってインストールするため、ここでは公式サイトを確認するだけで良いでしょう。これをインストールすると、次の各コマンドが利用できるようになります。</p>



<pre class="wp-block-code"><code>node
npm
npx</code></pre>



<h2>日々バージョンアップしていくNode.js</h2>



<p>Node.jsは日々開発が進んでいて、常にバージョンが変化しています。例えば、先の公式サイトにアクセスすると左右に分かれたボタンが並んでいますが、右側の「最新版」の他に左側に少し数字が古い「LTS」というバージョンが配布されています。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3114" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-2-18/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3114" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-2.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>LTS（Long Term Support）の略称で、いわゆる「安定版」などと言われます。それ以上の開発は止められている代わりに、セキュリティ的な懸念があるときには、積極的にそれを解決するバージョンアップは提供されるというバージョンになります。</p>



<p>最新版の方は、激しく開発が進んでいるため、機能使っていた機能が使えなくなるといったこともありえるため、通常の利用ではLTSを利用した方が安心でしょう。</p>



<p>さらに、Node.jsは「バージョンの依存」が激しく、15系で動作していたものが16系や17系では動作しないとか、16系以降の機能を使っているため15系以前では動作しないなど、さまざまな状況があります。</p>



<p>そこで、Node.jsはさまざまなバージョンをインストールして切り替えて利用するケースが多くあります。</p>



<p>それを実現するのが「Volta」と「n」です。</p>



<h2>Node.jsのバージョンを管理しよう</h2>



<p>Voltaやnは「バージョンマネージャー」や「ツールマネージャー」などと呼ばれるツールです。Node.jsなどを複数のバージョンを同時にインストールできるようになり、手軽に切り替えながら使いたいバージョンのツールを使うことができます。</p>



<p>ここでは、Voltaを実際に使いながら確認してみましょう。</p>



<h3>Voltaをインストールしよう</h3>



<figure class="wp-block-image size-large"><img data-attachment-id="3115" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-3-16/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3115" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-3.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>Voltaの公式サイトにアクセスします。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="10/03/22 04:37:20"><a href="https://volta.sh/" target="_blank"><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Volta &#8211; The Hassle-Free JavaScript Tool Manager</div><div class="wp-oembed-blog-card__description">Volta: Start your engines.</div><div class="wp-oembed-blog-card__domain"><img class="wp-oembed-blog-card__favicon" src="https://i0.wp.com/volta.sh//assets/favicon.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1">volta.sh</div></div></a></div>
</div></figure>



<p>macOSやLinuxの場合は、ターミナルを起動して次のコマンドを入力します。</p>



<pre class="wp-block-code"><code>curl https://get.volta.sh | bash</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3118" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-4-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3118" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-4.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そしたらいったんターミナルを再起動しておきましょう。</p>



<p>Windowsの場合は公式サイトからセットアッププログラムをダウンロードして、セットアップしましょう。その後、Windowsターミナルまたは、PowerShellを起動すれば利用できるようになります。</p>



<p>インストールが完了しているかは、コマンドラインに次のコマンドを入力してみましょう。</p>



<pre class="wp-block-code"><code>volta -v</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3119" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-5-15/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3119" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-5.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p><code>-v</code>というのはコマンドのバージョンを調べるためのオプションで、ソフトウェアが正しくインストールされているかを確認するときなどによく使われます。</p>



<h3>VoltaでNode.jsをインストールしよう</h3>



<p>それでは、Voltaを使ってNode.jsをインストールしてみましょう。次のように入力します。</p>



<pre class="wp-block-code"><code>volta install node</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3120" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-6-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3120" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-6.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>すると、Node.jsの現在提供されているLTS版がインストールされます。次のコマンドでバージョンを確認してみましょう。</p>



<pre class="wp-block-code"><code>node -v</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3122" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-7-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-7" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3122" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-7.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3>別のバージョンをインストールしよう</h3>



<p>では、他のバージョンをインストールしてみましょう。ここでは、LTS版が16として1つ前の15をインストールしてみます。次のように入力します。</p>



<pre class="wp-block-code"><code>volta install node@15</code></pre>



<p>再びバージョンを調べてみましょう。</p>



<pre class="wp-block-code"><code>node -v</code></pre>



<p>すると、バージョンが古くなっていることが分かります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3123" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-8-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-8" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3123" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-8.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>再び、LTS版に戻したい場合は次のように入力します。</p>



<pre class="wp-block-code"><code>volta install node</code></pre>



<p>すでにインストールされている場合でも、<code>install</code>というコマンドを利用することができます。バージョンを確認しましょう。</p>



<pre class="wp-block-code"><code>node -v</code></pre>



<p>こうして、手軽にNode.jsのバージョンを切り替えられるようになりました。こちらでNode.jsを利用していきましょう。</p>



<h2>バージョン管理システム「n」</h2>



<p>nというのも、Node.jsのバージョン管理システムです（現状macOS/Linux専用）。Voltaよりもシンプルに利用できます。ここではインストール方法を紹介しますが、Voltaと一緒に入れてしまうと誤動作の原因となるため、どちらかを利用するようにしましょう。</p>



<p>Voltaをアンインストールした場合は、macOSの場合は以下のフォルダを削除します。</p>



<pre class="wp-block-code"><code>/Users/（ユーザー名）/.volta</code></pre>



<p>Windowsの場合は、通常のアプリのアンインストール方法でアンインストールできます。</p>



<p>nをインストールする場合は、次のようなコマンドを入力します。</p>



<pre class="wp-block-code"><code>curl -L https://git.io/n-install | bash</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3139" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-17-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-17" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3139" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-17.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>すると、<code>n</code>というコマンドが利用できるようになります。</p>



<p>nでNode.jsをインストールする場合は、例えばLTSバージョンをインストールする場合は、次のようにします。</p>



<pre class="wp-block-code"><code>n lts</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3140" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-18-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-18" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3140" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-18.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>他のバージョンをインストールしたい場合は、そのバージョン番号を指定します。</p>



<pre class="wp-block-code"><code>n 15</code></pre>



<p>バージョンを切り替えたい場合は、シンプルに<code>n</code>というコマンドを使うと、バージョンを選ぶ画面が表示されます。</p>



<pre class="wp-block-code"><code>n</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3141" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-19-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-19" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3141" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-19.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>こうして利用できます。</p>



<h2>Node.jsでプログラムを作成してみよう</h2>



<p>では、せっかくなのでJavaScriptを使って簡単なプログラムを作成してみましょう。エディターを起動して、次のように入力します。</p>



<pre class="wp-block-code"><code>let answer = 5 + 10
console.log(answer)</code></pre>



<p>このファイルを「sample.js」などのファイル名で保存しておきましょう。そしたら、次のようにして実行します。</p>



<pre class="wp-block-code"><code>node sample.js</code></pre>



<p>すると画面には「15」と表示されました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3125" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-9-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-9" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3125" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-9.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これは、「5+10」の計算結果が表示されたという訳です。こうして、JavaScriptを使ってアプリケーションを作成することができるようになります。</p>



<h2>Node.js製パッケージを管理できるパッケージマネージャー</h2>



<p>Node.jsで作られたツールは、それぞれのサイトでダウンロードして利用することはできますが、各サイトを探し回ったりが面倒だったり、各ソフトが他のソフトに依存していたりなどで、いろいろなソフトをインストールしなければならなかったりします。</p>



<p>そこで、Node.jsでは「Node Package Manager」というツールが提供されています。これを使えば、簡単なコマンドでツール（パッケージといいます）をインストールすることができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3126" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-10-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-10" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3126" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-10.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>合わせて、これらのパッケージを管理するリポジトリーサイトの「npm」もあり、ここに世界中から優れたパッケージが日々登録されています。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="10/03/22 04:37:20"><a href="https://www.npmjs.com/" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/static.npmjs.com/338e4905a2684ca96e08c7780fc68412.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">npm</div><div class="wp-oembed-blog-card__description"></div><div class="wp-oembed-blog-card__domain">www.npmjs.com</div></div></a></div>
</div></figure>



<p>例えばここでは、CSSを生成するツールである「sass」をインストールしてみましょう。次のように入力します。</p>



<pre class="wp-block-code"><code>npm install sass</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3128" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-11-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-11" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3128" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-11.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p><code>npm install</code>の後に、インストールしたいパッケージの名前を指定します（短く<code>npm i</code>と記述する事もできます）。パッケージの名前は、先の「npm」の中から探すことができます。</p>



<figure class="wp-block-embed"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="10/03/22 04:37:20"><a href="https://www.npmjs.com/package/sass" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/static.npmjs.com/338e4905a2684ca96e08c7780fc68412.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">sass</div><div class="wp-oembed-blog-card__description">A pure JavaScript implementation of Sass.. Latest version: 1.49.9, last published: 13 days ago. Start using sass in your project by running `npm i sass`. There…</div><div class="wp-oembed-blog-card__domain">www.npmjs.com</div></div></a></div>
</div></figure>



<p>例えば、次のようなファイルを作成して「style.scss」というファイル名で保存してみましょう。</p>



<pre class="wp-block-code"><code>$main: blue;

header {
  h1 {
    color: $main;
  }
}</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3131" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-12-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-12" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3131" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-12.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここではSCSSの詳しい書式は省略するので、興味があったら「SCSS」について学習してみてください。これを変換すると、CSSファイルを作ることができます。次のように入力しましょう。</p>



<pre class="wp-block-code"><code>npx sass style.scss style.css</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3132" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-13-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-13" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3132" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-13.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これで、同じフォルダー内に次のような<code>style.css</code>ができあがります。</p>



<pre class="wp-block-code"><code>header h1 {
  color: blue;
}</code></pre>



<p>このように、自分に必要なツールをインストールして利用する事ができます。なお、ここで利用した<code>npx</code>というコマンドも、Node.jsをインストールすると同梱されるコマンドです。「パッケージランナー」などと呼ばれ、インストールしたパッケージを直接インストールするためのコマンドです。</p>



<p>Node.jsを利用する時は、先の通り<code>node</code>と<code>npm</code>、<code>npx</code>コマンドを使い分けていくことになります。</p>



<h2>npmと互換性のあるYarn</h2>



<p>npmと合わせてよく聞かれるコマンドに「yarn（ヤーン）」があります。これは、npmと同じ「パッケージマネージャー」の1つで、npmに比べて高速で簡単に扱えるという特徴があります（ただし、その後npmも改良されて、今ではあまり差がなくなりました）。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="3133" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-14-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-14" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3133" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-14.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>Yarnは、npmと互換性を保って開発されているため、npmと組み合わせて使ったりなども可能です。</p>



<p>Yarnも、先の「Volta」を使えば簡単にインストールできます。次のコマンドを入力しましょう。</p>



<pre class="wp-block-code"><code>volta install yarn</code></pre>



<p>インストールできたら、次のようにしてインストールされたか確認しましょう。</p>



<pre class="wp-block-code"><code>yarn -v</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3134" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-15-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-15" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3134" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-15.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>例えばここでは、先ほど<code>npm</code>を使ってインストールした「sass」を、アンインストールしてみましょう。次のようなコマンドを入力します。</p>



<pre class="wp-block-code"><code>npm uninstall sass</code></pre>



<p>これで起動できなくなりました。</p>



<p>今度は、Yarnを使ってインストールしてみましょう。</p>



<pre class="wp-block-code"><code>yarn add sass</code></pre>



<p>後は、次のようにしてSassを使うことができます。</p>



<pre class="wp-block-code"><code>yarn sass style.scss style.css</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="3137" data-permalink="https://tomosta.jp/article/npm_volta/attachment/image-16-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-16" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-3137" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/03/image-16.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>こうして、npmと同じように利用できます。現状、好みで使い分けると良いでしょう。</p>



<h2>Node.jsはこれからのプログラミングの必修科目</h2>



<p>Node.jsは誕生してから急激に発展して、今ではサーバーやデスクトップなどで欠かせないツールとなりました。プログラミングやウェブ制作に必要なツールも、npmを通じて配布されているケースがほとんどなので、ぜひ使い慣れていきましょう。</p>



<p>ソフトウェア開発に必要な<code>package.json</code>などについても、また別の機会に触れていきたいと思います。</p>The post <a href="https://tomosta.jp/article/npm_volta/">npmってなに？ Node.jsのバージョンを切り替えられるVolta / nとyarnも紹介</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
					<wfw:commentRss>https://tomosta.jp/article/npm_volta/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">3107</post-id>	</item>
		<item>
		<title>動画でまなぶSlack（スラック）入門</title>
		<link>https://tomosta.jp/article/slack/</link>
					<comments>https://tomosta.jp/article/slack/#respond</comments>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Wed, 02 Feb 2022 08:48:36 +0000</pubDate>
				<category><![CDATA[入門記事]]></category>
		<category><![CDATA[pickup]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=2773</guid>

					<description><![CDATA[<p>Slack（スラック）は、Slack Technologies社が提供するチャットサービスです。テキストチャットはもちろん、有償プラン（850円/人・月）なら最大15名までのビデオ通話などもでき、世界中で利用されています。</p>
The post <a href="https://tomosta.jp/article/slack/">動画でまなぶSlack（スラック）入門</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<figure class="wp-block-image size-large"><img data-attachment-id="2922" data-permalink="https://tomosta.jp/article/slack/attachment/slack5-1/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?fit=1280%2C720&amp;ssl=1" data-orig-size="1280,720" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="slack5-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2922" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/slack5-1.png?w=1280&amp;ssl=1 1280w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>Slack（スラック）は、Slack Technologies社が提供するチャットサービスです。テキストチャットはもちろん、有償プラン（850円/人・月）なら最大15名までのビデオ通話などもでき、世界中で利用されています。</p>



<ul><li><a href="https://www.youtube.com/watch?v=oFPiLcLIJYI" target="_blank" rel="noreferrer noopener">メンバーシップ（ライトプラン）の方は、こちらから広告なしフル動画をご覧ください</a></li></ul>



<h2 id="slackの特長">Slackの特長</h2>



<p>Slackと同じチャットツールとしては、古くはSkypeなどから始まり、Facebook Messengerや、近年ではMicrosoft Teams、Google Meetなど、リモートワーク全盛となって、各社が激しく競争しています。</p>



<p>そんな中でSlackで、次の特長などから特に小規模の企業などで愛用されています。</p>



<h3 id="チームと個人のゆるい関係">チームと個人のゆるい関係</h3>



<p>Microsoft TeamsやGoogle Meetの場合、最初に会社単位で契約をして、その全メンバーを招待しなければいけません。または、個人のGoogleアカウントなどで繋がるなど、チームと個人の区分けがはっきりしてしまっています。</p>



<p>しかしSlackの場合、契約を1名単位で行えるため、会社のメンバーを入れるのはもちろん、外部のパートーナーも一緒に契約をしてしまったり、逆に普段利用しないメンバーは招待しないといった具合に柔軟な編成をすることができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2782" data-permalink="https://tomosta.jp/article/slack/attachment/image-93/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2782" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="複数チームへの所属とslackコネクト">複数チームへの所属とSlackコネクト</h3>



<p>逆に、1人の人が複数のSlackチームに所属することもできます。またさらには「<a href="https://slack.com/intl/ja-jp/connect" target="_blank" rel="noreferrer noopener">Slackコネクト</a>」という機能を使って、別のチームのSlackと繋ぐこともできるなど、とにかく柔軟にグループを構築することができます。</p>



<h3 id="豊富な連携アプリ">豊富な連携アプリ</h3>



<p>Slackの魅力は、<a href="https://slack.com/intl/ja-jp/integrations" target="_blank" rel="noreferrer noopener">連携アプリ</a>が豊富に存在する点です。開発情報がオープンになっているため、手軽に連携アプリを作成でき、個人で開発したものから各外部のサービスなども手軽に接続できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2783" data-permalink="https://tomosta.jp/article/slack/attachment/image-1-19/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?fit=2484%2C1452&amp;ssl=1" data-orig-size="2484,1452" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?fit=300%2C175&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?fit=1024%2C599&amp;ssl=1" loading="lazy" width="1024" height="599" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=1024%2C599&#038;ssl=1" alt="" class="wp-image-2783" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=1024%2C599&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=300%2C175&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=768%2C449&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=1536%2C898&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?resize=1920%2C1122&amp;ssl=1 1920w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-1.png?w=2440&amp;ssl=1 2440w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これにより、Googleドキュメントをプレビューできるようにしたり、ウェブサイトにお問い合わせがあったときにSlackに通知を入れたり、Slack上で指示を出すとbotが自動的に作業を行うなど、Slackをベースにした開発を行うことができます。</p>



<p>このように便利なSlackを是非活用してみましょう。</p>


<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-7150380587227549"
     data-ad-slot="3618006766"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>



<h2 id="slackのプラン">Slackのプラン</h2>



<p>Slackは無償プランから大企業向けのプランまで幅広く準備されています。無償版では次のような制限があります。</p>



<ul><li>10,000件を超えるメッセージは閲覧できなくなります</li><li>連携できるアプリが10個までに制限されています</li><li>ビデオ通話は2名までに制限されています</li></ul>



<p>これらの制限を外すには「プロ」または「ビジネスプラン」および「Enterprise Grid」というプランにする必要があります。詳しい料金などはこちらをご参照ください。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="13/03/22 23:40:04"><a href="https://slack.com/intl/ja-jp/pricing" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/a.slack-edge.com/80588/marketing/img/meta/slack_hash_256.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">料金プラン</div><div class="wp-oembed-blog-card__description">あなたの会社にぴったり合う Slack プランを検索。プランにはメッセージ、検索、通話とストレージ、外部組織とのコラボレーションなど、その他沢山の便利な機能が含まれて…</div><div class="wp-oembed-blog-card__domain">slack.com</div></div></a></div>
</div></figure>



<p>まずはここでは、無償プランを利用していきましょう。</p>



<h2 id="ワークスペースを作ろう">ワークスペースを作ろう</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Slack（スラック）入門 #01：Slackのワークスペースを作ろう" width="1220" height="686" src="https://www.youtube.com/embed/41PxfB9v1TY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>Slackでは「ワークスペース」と呼ばれる単位で、チームを編成していきます。もし、すでにワークスペースを作成したメンバーから招待されている場合は、そのワークスペースに参加できますが、自分で作成する場合はSlackの公式サイトから作成していきます。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="13/03/22 23:40:04"><a href="https://slack.com/intl/ja-jp/" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/a.slack-edge.com/c5b1ca8/marketing/img/homepage/self-serve-campaign/unfurl/slack-homepage-unfurl-aubergine.jpg?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">働き方の未来は Slack に</div><div class="wp-oembed-blog-card__description">Slack は、チームとコミュニケーションを図るための新しい手段です。メールよりも速く、整理され、安全な方法で実現できます。</div><div class="wp-oembed-blog-card__domain">slack.com</div></div></a></div>
</div></figure>



<p>「無料で試してみる」ボタンをクリックして、メールアドレスを入力しましょう。アカウントを作成したら「ワークスペースを新規作成」ボタンをクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2786" data-permalink="https://tomosta.jp/article/slack/attachment/image-2-17/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2786" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-2.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そしたら、ワークスペース名を決めましょう。通常は企業の名前などで良いでしょう。取り組んでいるプロジェクトなどはこの後の「チャンネル」というもので分類ができるだけ、ここではチームなど広い範囲で名前を決めるとよいでしょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2790" data-permalink="https://tomosta.jp/article/slack/attachment/image-4-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2790" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-4.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="最初の招待者を決めよう">最初の招待者を決めよう</h3>



<p>そしたら、チャンネルに招待したいメンバーのメールアドレスを入力します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2791" data-permalink="https://tomosta.jp/article/slack/attachment/image-5-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2791" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-5.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>後で行う場合は「この手順をスキップする」をクリックしても構いません。</p>



<h3 id="チャンネル名を決めよう">チャンネル名を決めよう</h3>



<p>次に、「あなたと同僚はどんな仕事に取り組んでいますか？」という質問をされます。これが実は、「チャンネル」という話題をまとめる範囲を作るための設定になります。思いつかなければ、後から作れるため、ここでは「雑談」などとしておくとよいでしょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2794" data-permalink="https://tomosta.jp/article/slack/attachment/image-6-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2794" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-6.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これで、ワークスペースの準備が完了です。</p>



<h2 id="アプリをインストールしよう">アプリをインストールしよう</h2>



<p>ワークスペースが準備できると、図のような画面に移動します。Slackはブラウザーだけでもほとんどの機能を利用することができます。ただし、Windows/macOSやAndroid/iOS向けに公開されているアプリをインストールすることで、より便利に活用することができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2796" data-permalink="https://tomosta.jp/article/slack/attachment/image-7-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-7" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2796" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-7.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここでは画面に表示されている、環境に合わせたダウンロードボタンをクリックしましょう。アプリのダウンロードが始まります。</p>



<p>セットアップが完了したら起動しておきましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2798" data-permalink="https://tomosta.jp/article/slack/attachment/image-8-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-8" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2798" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-8.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>この状態で、再度先ほどのブラウザー画面に戻って、「アカウントを接続する」ボタンをクリックすればアプリでSlackにログインされます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2800" data-permalink="https://tomosta.jp/article/slack/attachment/image-9-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-9" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2800" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-9.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これ以降は、アプリを起動するだけでワークスペースにログインできます。</p>



<p>1つのアプリで、複数のワークスペースにログインすることもできます。「ファイル→ワークスペース→他のワークスペースにサインイン」メニューをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2801" data-permalink="https://tomosta.jp/article/slack/attachment/image-10-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-10" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2801" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-10.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>また、スマホ用のアプリもiOS/Androidともに提供されています。こちらは、各ストアからインストールして、ワークスペースを作成したときのメールアドレスでログインしましょう。すると、ログイン用のメールが送信されるのでスマホでメールを受信してログインすることができます。</p>



<h2 id="コラム-手作業でログインしよう">【コラム】手作業でログインしよう</h2>



<p>もし、これらの手段でログインができなかった場合は、Slackのサイトに改めてアクセスしてみましょう。右上の「サインイン」をクリックしてサインインすると、参加しているワークスペースの一覧を見ることができます。ここから各ワークスペースにログインできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2803" data-permalink="https://tomosta.jp/article/slack/attachment/image-11-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?fit=2366%2C1346&amp;ssl=1" data-orig-size="2366,1346" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-11" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?fit=300%2C171&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?fit=1024%2C583&amp;ssl=1" loading="lazy" width="1024" height="583" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=1024%2C583&#038;ssl=1" alt="" class="wp-image-2803" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=1024%2C583&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=300%2C171&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=768%2C437&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=1536%2C874&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-11.png?resize=1920%2C1092&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="チャットにメッセージを打ち込もう">チャットにメッセージを打ち込もう</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Slack（スラック）入門 #02：チャンネルを使いこなそう（スレッド、スタンプ）" width="1220" height="686" src="https://www.youtube.com/embed/Lj1EwhhYIaM?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>それでは、早速Slackを使ってみましょう。左側を見ると、図のように「チャンネル」「ダイレクトメッセージ」というエリアに分かれています。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2806" data-permalink="https://tomosta.jp/article/slack/attachment/image-12-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-12" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2806" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-12.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>まずは「チャンネル」を見ていきましょう。先の通り、ワークスペースには複数のチャンネルを含めることができ、ここでプロジェクトごととか話題ごとに分けることができます。</p>



<p>チャンネルごとにメンバーを制御できるため、ワークスペースには参加していても、特定のチャンネルにはアクセスできないといったメンバーを作ることができます。ワークスペースのオーナーはすべてのチャンネルを制御できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2807" data-permalink="https://tomosta.jp/article/slack/attachment/image-13-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-13" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2807" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-13.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>チャンネルは、最初から「general」と「random」というチャンネルが準備されています。generalチャンネルは、ワークスペースに参加しているすべてのメンバーが自動的に参加されるため、一般的なお知らせなどに利用します。randomチャンネルはいわゆる「雑談」チャンネルです。必要なければ利用しなくても良いでしょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2808" data-permalink="https://tomosta.jp/article/slack/attachment/image-14-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-14" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2808" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-14.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ワークスペースのセットアップ時に、「取り組んでいるプロジェクト」に入力した場合は、その名前のチャンネルも自動的に作られています。</p>



<h3 id="チャンネルを削除するこれらのチャンネルが不要な場合はチャンネルを右クリックして-チャンネル詳細を開く-をクリックします">チャンネルを削除する</h3>



<p id="チャンネルを削除するこれらのチャンネルが不要な場合はチャンネルを右クリックして-チャンネル詳細を開く-をクリックします">これらのチャンネルが不要な場合はチャンネルを右クリックして「チャンネル詳細を開く」をクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2810" data-permalink="https://tomosta.jp/article/slack/attachment/image-15-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-15" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2810" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-15.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「設定」タブにある「このチャンネルを削除する」をクリックすれば、チャンネルを削除できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2812" data-permalink="https://tomosta.jp/article/slack/attachment/image-16-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-16" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2812" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-16.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>それではここでは、randomチャンネルを選んでチャットを打ち込んでみましょう。一番下の入力欄をクリックして、メッセージを入力します。終わったら、右下の送信ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2815" data-permalink="https://tomosta.jp/article/slack/attachment/image-18-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-18" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2815" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-18.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>一番右の矢印ボタンをクリックすると、送信時刻を調整することもできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2816" data-permalink="https://tomosta.jp/article/slack/attachment/image-19-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-19" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2816" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-19.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="文章を装飾しよう">文章を装飾しよう</h3>



<p>Slackのチャットは、単なるテキストではなくいわゆる「リッチテキスト」といわれる、若干の装飾が可能になっています。入力画面に上部にあるボタンで、太字や斜体、打ち消し線や箇条書きなどができ、またコードの挿入や引用、画像の挿入などができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2818" data-permalink="https://tomosta.jp/article/slack/attachment/image-20-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-20" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2818" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-20.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="enter-return-キーの挙動">Enter（Return）キーの挙動</h3>



<p>通常、メッセージを入力中にEnter（Return）キーを押すと、メッセージが改行されます。メッセージを送信したい場合は、Ctrl+Enter（Cmd+Enter）を押します。もしこの挙動を反対にしたい場合は、ワークスペース名をクリックして「環境設定」をクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2820" data-permalink="https://tomosta.jp/article/slack/attachment/image-21-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-21" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2820" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-21.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「詳細設定」の「メッセージ作成画面でEnterを押した時：」という項目で切り替えることができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2822" data-permalink="https://tomosta.jp/article/slack/attachment/image-22-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-22" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2822" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-22.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="メッセージの下書きを保存しよう">メッセージの下書きを保存しよう</h3>



<p>メッセージを書いている途中に、送信せずにSlackを閉じたり、他のチャンネルに移動した場合は「下書き」として保存され、左側のサイドバーに表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2826" data-permalink="https://tomosta.jp/article/slack/attachment/image-24-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-24" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2826" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-24.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>また、各チャンネルの右側にも下書きがある場合はアイコンが表示されます。これをクリックすることで、編集を再開できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2824" data-permalink="https://tomosta.jp/article/slack/attachment/image-23-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-23" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2824" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-23.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="メンションを飛ばそう">メンションを飛ばそう</h3>



<p>通常、Slackにメッセージを投稿すると通知は飛ぶものの、何件の未読があるのかなどは分かりません。しかし、「メンバーをメンションする」ボタンをクリックすると、メンション（言及するといった意味ですが、ここでは「宛先」のような意味）を飛ばすことができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2828" data-permalink="https://tomosta.jp/article/slack/attachment/image-25-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-25" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2828" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-25.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>Slackの参加者を選ぶか、メンバー名を入力すると、そのメンバー宛のメッセージとなり、通知に加えて図のような未読数がカウントされるようになります。これによって、見落としを防ぐことができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2830" data-permalink="https://tomosta.jp/article/slack/attachment/image-26-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-26" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2830" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-26.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>また、特別なメンションとして次の2つがあります。</p>



<ul><li>@here チャンネル内のオンラインのメンバー全員</li><li>@channel チャンネル内のメンバー全員</li></ul>



<figure class="wp-block-image size-large"><img data-attachment-id="2832" data-permalink="https://tomosta.jp/article/slack/attachment/image-28-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-28" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2832" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-28.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>必要に応じて使い分けるとよいでしょう。</p>



<h2 id="メッセージを確認しよう">メッセージを確認しよう</h2>



<p>送信したメッセージは、チャンネルに参加しているメンバーに通知されます。未読のメッセージがあるチャンネルは太字で表示され、クリックすると未読のメッセージを確認できます。</p>



<h3 id="メッセージに反応しよう">メッセージに反応しよう</h3>



<p>送信されたメッセージにマウスカーソルを重ねると、右上に図のようなボタン群が表示され、次のような各アクションで反応することができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2838" data-permalink="https://tomosta.jp/article/slack/attachment/image-29-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-29" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2838" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-29.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="リアクションアイコンを送る">リアクションアイコンを送る</h4>



<p>規定のアイコンや、その他自由な絵文字を送信することができます。送信すると、各メッセージの下にアイコンが並びます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2839" data-permalink="https://tomosta.jp/article/slack/attachment/image-30-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-30" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2839" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-30.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="ブックマークをする">ブックマークをする</h4>



<p>ブックマークに保存して、後から見返すことができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2840" data-permalink="https://tomosta.jp/article/slack/attachment/image-31-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-31" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2840" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-31.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>保存したメッセージは、サイドバーの「その他」の中にあるブックマークの中に保管されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2843" data-permalink="https://tomosta.jp/article/slack/attachment/image-33-6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-33" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2843" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-33.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="後でリマインドする">後でリマインドする</h4>



<p>「その他」メニューからリマインドを設定すると、後で再度通知を受け取ることができます。後でやることなどを忘れないようにできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2845" data-permalink="https://tomosta.jp/article/slack/attachment/image-34-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-34" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2845" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-34.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>設定時間になると、「Slackbot」というシステムユーザーからメッセージが送信され、通知されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2846" data-permalink="https://tomosta.jp/article/slack/attachment/image-35-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-35" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2846" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-35.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="共有する">共有する</h4>



<p>他のチームメンバーや他のチャンネルに共有できます。ただし、チャンネルへのアクセス権限がない場合は見られないので注意しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2848" data-permalink="https://tomosta.jp/article/slack/attachment/image-36-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-36" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2848" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-36.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>またSlack内ではなく、メールなどで共有をしたい場合は、左下の「リンクをコピー」をクリックしてリンクを共有しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2849" data-permalink="https://tomosta.jp/article/slack/attachment/image-37-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-37" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2849" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-37.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>メッセージのリンクは、「その他」メニューからもコピーできるほか、メッセージの投稿時間の所を右クリックしても取得できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2850" data-permalink="https://tomosta.jp/article/slack/attachment/image-38-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-38" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2850" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-38.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="チャンネルへピン留めする">チャンネルへピン留めする</h4>



<p>チャンネルオーナーなど一部の権限の場合、「その他」メニューからメッセージをチャンネルに「ピン留め」できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2852" data-permalink="https://tomosta.jp/article/slack/attachment/image-39-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-39" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2852" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-39.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ピン留めしたメッセージは、チャンネル上部の図の部分からいつでも参照できるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2853" data-permalink="https://tomosta.jp/article/slack/attachment/image-40-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-40" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2853" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-40.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h4 id="返信する">返信する</h4>



<p>返信ボタンをクリックすると、「スレッド」を展開することができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2855" data-permalink="https://tomosta.jp/article/slack/attachment/image-41-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-41" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2855" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-41.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>スレッドでは、そのメッセージについてのやり取りを個別に続ける事ができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2856" data-permalink="https://tomosta.jp/article/slack/attachment/image-42-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-42" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2856" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-42.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>また、サイドエリアの「スレッド」メニューから、スレッドで返信された内容をいっきに確認できて便利です。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2859" data-permalink="https://tomosta.jp/image-43-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?fit=670%2C377&amp;ssl=1" data-orig-size="670,377" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-43" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?fit=670%2C377&amp;ssl=1" loading="lazy" width="670" height="377" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?resize=670%2C377&#038;ssl=1" alt="" class="wp-image-2859" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?w=670&amp;ssl=1 670w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-43-edited.png?resize=300%2C169&amp;ssl=1 300w" sizes="(max-width: 670px) 100vw, 670px" data-recalc-dims="1" /></figure>



<p>メッセージに反応をするときには、必ずスレッドを使って返信をするなどルールを決めておくとよいでしょう。</p>



<h2 id="ダイレクトメッセージ">ダイレクトメッセージ</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Slack（スラック）入門 #03：ダイレクトメッセージと通知" width="1220" height="686" src="https://www.youtube.com/embed/eKPXnM0a-_E?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>Slackは、話題ごとにチャンネルを作り、メンバーを集めてチャットを送るのが基本の使い方ですが、チャンネルを作るほどでもない一時的な話題は、直接メンバーに話しかける「ダイレクトメッセージ」を利用する事ができます。</p>



<p>左下の「ダイレクトメッセージ」のメンバー一覧にいるメンバーなら直接クリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2862" data-permalink="https://tomosta.jp/article/slack/attachment/image-44-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-44" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2862" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-44.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>見当たらない場合は、「その他→メンバーディレクトリとユーザーグループ」メニューから一覧を確認できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2863" data-permalink="https://tomosta.jp/article/slack/attachment/image-45-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-45" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2863" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-45.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ダイレクトメッセージが開始されると、通常のチャンネルと同様にメッセージを送信することができます。こうして、プライベートなメッセージのやり取りが行えます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2866" data-permalink="https://tomosta.jp/article/slack/attachment/image-46-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-46" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2866" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-46.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="複数人のダイレクトメッセージ">複数人のダイレクトメッセージ</h3>



<p>ダイレクトメッセージは、複数のメンバーを指定することもできます。図の「新規メッセージ」ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2867" data-permalink="https://tomosta.jp/article/slack/attachment/image-47-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-47" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2867" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-47.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>メールアプリのように宛先が指定できるので、ここで送信したいメンバーを指定します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2868" data-permalink="https://tomosta.jp/article/slack/attachment/image-48-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-48" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2868" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-48.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「ダイレクトメッセージ」の欄にも、作成した複数名ダイレクトメッセージが表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2871" data-permalink="https://tomosta.jp/article/slack/attachment/image-49-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-49" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2871" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-49.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="ダイレクトメッセージの利点と欠点">ダイレクトメッセージの利点と欠点</h3>



<p>ダイレクトメッセージは、チャンネルよりも見落とされることが少なく、またみられたくないメンバーなどがいる場合に、間違いを少なくすることができます。</p>



<p>ただし、使いすぎてしまうと話題が整理できなくなってしまう上に、コミュニケーションがクローズドになってしまって、議論が活発にならず、Slackを利用しているメリットが減ってしまいます。そのため、うまくチャンネルと使い分け、ダイレクトメッセージの使いどころの定義や、場合によっては「利用禁止」などルールを定める必要があるでしょう。</p>



<h2 id="通知を調整しよう">通知を調整しよう</h2>



<p>チャットの場合、時間帯によっては通知が邪魔になったり、反応できない場合もあります。</p>



<p>また、通知を受け取りたくない場合は「通知を一時停止する」で調整できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2874" data-permalink="https://tomosta.jp/article/slack/attachment/image-50-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-50" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2874" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-50.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>また、「通知スケジュールを設定する」メニューから通知を受け取れる時間をあらかじめ設定しておくこともできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2875" data-permalink="https://tomosta.jp/article/slack/attachment/image-51-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-51" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2875" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-51.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>勤務時間外や就寝時間中などは、通知を切っておくと良いでしょう。</p>



<h3 id="ステータスを設定しよう">ステータスを設定しよう</h3>



<p>Slackをログインして利用している間、他のメンバーには緑色の円で「アクティブ」である事が示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2877" data-permalink="https://tomosta.jp/article/slack/attachment/image-52-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-52" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2877" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-52.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>しばらくPCやスマホを利用していないと、離席中を示す円に変わります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2878" data-permalink="https://tomosta.jp/article/slack/attachment/image-53-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-53" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2878" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-53.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これを手動で変更したい場合は、右上のアイコンをクリックして「ログイン状態を離席中に変更」をクリックするか、「ステータスを更新する」ボタンをクリックして、自由なステータスに設定します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2880" data-permalink="https://tomosta.jp/article/slack/attachment/image-54-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-54" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2880" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-54.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ステータスでは、会議中や病欠など、決められたステータスを選ぶかまたは自由に作成して、その通知を継続する期間を選ぶことができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2882" data-permalink="https://tomosta.jp/article/slack/attachment/image-55-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-55" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2882" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-55.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="通話機能を利用しよう">通話機能を利用しよう</h2>



<p>Slackにはビデオ通話機能が搭載されています。Free版では2名まで、Pro版以上では15名までのグループ通話も可能です。</p>



<p>通話をしたい場合は、チャット欄の右上に通話ボタンがあります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2884" data-permalink="https://tomosta.jp/article/slack/attachment/image-56-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-56" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2884" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-56.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>クリックすると通話画面が表示され、相手に呼び出し音が鳴ります。応答すれば、通話が可能になります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2885" data-permalink="https://tomosta.jp/article/slack/attachment/image-57-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-57" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2885" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-57.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="スニペット-ポストを作ろう">スニペット、ポストを作ろう</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Slack（スラック）入門 #04：ノート、リマインダ、スニペットで情報を活用しよう" width="1220" height="686" src="https://www.youtube.com/embed/MBkaomprpEE?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>チャットのメッセージは、ブックマークなどで残すことはできるものの、基本的には過去のメッセージは流れてしまいます。</p>



<p>そこで、長く残したり編集し続けるような内容を残す場合には、スニペットやノートを利用すると便利です。</p>



<h3 id="ポストを使おう">ポストを使おう</h3>



<p>ポストは、Slack内にファイルを作成して、チャンネルメンバーと共有したり、共同で編集することができます。議事録や、プロジェクトに関するメモなどを残しておくのに最適です。</p>



<p>ポストを作るには、メッセージ欄の左側にある「+」ボタンをクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2888" data-permalink="https://tomosta.jp/article/slack/attachment/image-58-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-58" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2888" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-58.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「ポストを作成する」をクリックすると、図のようなウィンドウが表示されるので、タイトルと内容を入力しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2889" data-permalink="https://tomosta.jp/article/slack/attachment/image-59-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-59" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2889" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-59.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>なお、Markdown記法に対応しているため、<code>[ ]</code>などと入力するとチェックボックスに変換することなどもできます。</p>



<p>自分だけで利用するポストの場合は、このまま閉じれば保存されますが、チャンネルなどで共有したい場合は、右上の「共有」ボタンをクリックして共有しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2892" data-permalink="https://tomosta.jp/article/slack/attachment/image-60-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-60" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2892" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-60.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>他のメンバーの編集を可能にしたり、Slackの外部に公開することなども可能です。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2894" data-permalink="https://tomosta.jp/article/slack/attachment/image-61-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-61" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2894" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-61.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>なお、チャンネル内でポストを作成しても、チャンネルで共有されるわけではないので、改めて共有の設定が必要になります。注意しましょう。</p>



<p>また、ポストは「ファイルブラウザ」ですべて確認できます。表示されていない場合は「その他」メニューから表示しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2895" data-permalink="https://tomosta.jp/article/slack/attachment/image-62-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-62" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2895" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-62.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="スニペットを使おう">スニペットを使おう</h3>



<p>スニペットは、プログラムのソースコードなどを共有するときに利用しやすい機能です。標準で、マークダウンや各種プログラム言語に対応したコードカラーが準備されていて、ソースコードを色分けして表示することができます。</p>



<p>スニペットを作成するには、メッセージ欄の左側の「+」をクリックしたら、「すべてのショートカットをブラウズする→Slack→テキストのスニペットを作成する」メニューをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2896" data-permalink="https://tomosta.jp/article/slack/attachment/image-63-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-63" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2896" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-63.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<figure class="wp-block-image size-large"><img data-attachment-id="2897" data-permalink="https://tomosta.jp/article/slack/attachment/image-64-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-64" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2897" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-64.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<figure class="wp-block-image size-large"><img data-attachment-id="2899" data-permalink="https://tomosta.jp/article/slack/attachment/image-65-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-65" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2899" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-65.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>タイトルと内容を入力して、もし言語が自動的に認識されない場合は右上の「タイプ」から、適切なものを選びます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2900" data-permalink="https://tomosta.jp/article/slack/attachment/image-66-3/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-66" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2900" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-66.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>共有したい場合は、下の「このファイルを共有する」にチェックを入れて、共有先を選びましょう。</p>



<p>スニペットも、ポストと同様「ファイルブラウザ」からも確認できます。</p>



<h3 id="リマインダーを使おう">リマインダーを使おう</h3>



<p>後で思い出したい内容などを、リマインダーとして作成しておくこともできます。メッセージ欄左側の「+」をクリックして「リマインダーを作成する」をクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2904" data-permalink="https://tomosta.jp/article/slack/attachment/image-67-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-67" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2904" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-67.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>図のウィンドウで、リマインドしたい日時と内容を入力して「作成」ボタンをクリックしましょう。設定した時間に通知が送信されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2905" data-permalink="https://tomosta.jp/article/slack/attachment/image-68-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-68" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2905" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-68.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>設定した時間になると「Slackbot」というシステムユーザーから、ダイレクトメッセージが送信され通知がされます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2907" data-permalink="https://tomosta.jp/article/slack/attachment/image-69-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-69" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2907" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-69.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="キーボードからショートカットを利用する">キーボードからショートカットを利用する</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Slack（スラック）入門 #05：キーボードショートカットを使いこなそう" width="1220" height="686" src="https://www.youtube.com/embed/JGJJ-LXnuuw?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>Slackには数多くのキーボードショートカットが割り当てられています。メニュー項目にそれぞれショートカットが設定されているほか、以下のページで全部のショートカットが確認できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2909" data-permalink="https://tomosta.jp/article/slack/attachment/image-70-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-70" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2909" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-70.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="13/03/22 23:40:04"><a href="https://slack.com/intl/ja-jp/help/articles/201374536-Slack-%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/a.slack-edge.com/80588/marketing/img/meta/slack_hash_256.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Slack のキーボードショートカット</div><div class="wp-oembed-blog-card__description">Slack のキーボードショートカットを使うと、すばやく移動できます。デスクトップの Slack から⌘,（Mac）または Ctrl,（Windows/Linux）を押すと、キーBAD+C3&#8230;</div><div class="wp-oembed-blog-card__domain">slack.com</div></div></a></div>
</div></figure>



<p>「Command+/（Ctrl+/）」キーで、ヘルプを確認することもできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2911" data-permalink="https://tomosta.jp/article/slack/attachment/image-71-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-71" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2911" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-71.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここでは、便利なショートカットをいくつか紹介しましょう。</p>



<figure class="wp-block-flexible-table-block-table is-style-stripes"><table class="is-stacked-on-mobile"><thead><tr><th>機能名</th><th>ショートカット</th></tr></thead><tbody><tr><td>ステータスの設定</td><td>Cmd(Ctrl)+Shift+Y</td></tr><tr><td>新しいスニペットの作成</td><td>Cmd(Ctrl)+Shift+Enter</td></tr><tr><td>絵文字の挿入</td><td>Cmd(Ctrl)+Shift+_</td></tr><tr><td>全未読画面へ移動</td><td>Cmd+Shift+A</td></tr><tr><td>ブックマークに登録・解除</td><td>A</td></tr><tr><td>ピン留めをつける・はずす</td><td>P</td></tr><tr><td>リマインダーを作成する</td><td>M</td></tr><tr><td>絵文字リアクション</td><td>R</td></tr></tbody></table></figure>



<h3 id="スラッシュコマンドの利用">スラッシュコマンドの利用</h3>



<p>メッセージの入力エリアで、先頭にスラッシュ記号を入力すると、コマンドを打ち込むことができるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2915" data-permalink="https://tomosta.jp/article/slack/attachment/image-72-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-72" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2915" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-72.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>各コマンドは次のページで確認できます。</p>



<figure class="wp-block-embed is-type-rich is-provider-wp-oembed-blog-card wp-block-embed-wp-oembed-blog-card"><div class="wp-block-embed__wrapper">
<div class="wp-oembed-blog-card" data-cached-time="13/03/22 23:40:05"><a href="https://slack.com/intl/ja-jp/help/articles/201259356-Slack-%E3%81%AE%E3%82%B9%E3%83%A9%E3%83%83%E3%82%B7%E3%83%A5%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89" target="_blank"><div class="wp-oembed-blog-card__figure"><img src="https://i0.wp.com/a.slack-edge.com/80588/marketing/img/meta/slack_hash_256.png?w=1220&#038;ssl=1" alt="" data-recalc-dims="1"></div><div class="wp-oembed-blog-card__body"><div class="wp-oembed-blog-card__title">Slack のスラッシュコマンド</div><div class="wp-oembed-blog-card__description">Slack において、スラッシュコマンドは特定のアクションのショートカットとして機能します。ワークスペースで使用できるスラッシュコマンドにBAD+C1&#8230;</div><div class="wp-oembed-blog-card__domain">slack.com</div></div></a></div>
</div></figure>



<p>代表的なコマンドについて紹介しましょう。</p>



<figure class="wp-block-flexible-table-block-table is-scroll-on-mobile is-style-stripes"><table class=""><thead><tr><th>コマンド</th><th>内容</th></tr></thead><tbody><tr><td>/dm [@someone]</td><td>ダイレクトメッセージを送信する</td></tr><tr><td>/invite @someone</td><td>メンバーをチャンネルに招待する</td></tr><tr><td>/msg [#channel]</td><td>チャンネルにメッセージを送信する</td></tr><tr><td>/remind</td><td>リマインダーを作成する</td></tr><tr><td>/remind list</td><td>リマインダーリストを表示する</td></tr><tr><td>/status</td><td>ステータスを設定する</td></tr></tbody></table></figure>



<p>なお、コマンドは一部を打ち込めば候補が表示されるので、ここから選択して続ける事もできます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2917" data-permalink="https://tomosta.jp/article/slack/attachment/image-73-2/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-73" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2917" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2022/02/image-73.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>すべてのオプション類を指定する必要もないため、まずはよく使う機能が使いはじめていくとよいでしょう。</p>



<p>Slackはこのように、単なるチャットサービスを超えて、さまざまな情報管理を行える管理ツールとして機能する便利なサービスです。無償から利用できるため、是非チームで活用してみましょう。</p>


<div class="u-aligncenter-wrapper">
<div class="wp-block-image"><figure class="size-medium is-resized"><a href="https://www.youtube.com/channel/UCphTq6mefx_15CjD35qgXgA/join" target="_blank" rel="noopener"><img data-attachment-id="2993" data-permalink="https://tomosta.jp/light_plan_banner/" data-orig-file="https://tomosta.jp/wp-content/uploads/2022/02/light_plan_banner.svg" data-orig-size="615,245" data-comments-opened="1" data-image-meta="[]" data-image-title="light_plan_banner" data-image-description="" data-image-caption="" data-medium-file="https://tomosta.jp/wp-content/uploads/2022/02/light_plan_banner.svg" data-large-file="https://tomosta.jp/wp-content/uploads/2022/02/light_plan_banner.svg" loading="lazy" src="https://tomosta.jp/wp-content/uploads/2022/02/light_plan_banner.svg" alt="ともすたのYouTube講座を広告なしでまとめて見られる！　月額190円。YouTubeメンバーシップ（ライトプラン）に今すぐ登録！" class="wp-image-2993" width="313" height="125"/></a></figure></div>
</div>


<p></p>The post <a href="https://tomosta.jp/article/slack/">動画でまなぶSlack（スラック）入門</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
					<wfw:commentRss>https://tomosta.jp/article/slack/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">2773</post-id>	</item>
		<item>
		<title>Git/SourceTreeマスター講座をスタートしました（有料講座）</title>
		<link>https://tomosta.jp/news/git-master-start/</link>
					<comments>https://tomosta.jp/news/git-master-start/#respond</comments>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Fri, 07 Jan 2022 23:02:25 +0000</pubDate>
				<category><![CDATA[お知らせ]]></category>
		<category><![CDATA[pickup]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=2605</guid>

					<description><![CDATA[<p>YouTubeで月額990円で学んで頂ける有料講座として、「Git/SourceTreeマスター講座」をスタートしました。 この講座では、無償のGitクライアント「SourceTree」を利用してGitの基本からGitH [&#8230;]</p>
The post <a href="https://tomosta.jp/news/git-master-start/">Git/SourceTreeマスター講座をスタートしました（有料講座）</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<p>YouTubeで月額990円で学んで頂ける有料講座として、「Git/SourceTreeマスター講座」をスタートしました。</p>



<p>この講座では、無償のGitクライアント「SourceTree」を利用してGitの基本からGitHubの活用方法などを学んで頂けます。</p>



<p>その他、Udemyで販売中の各講座もすべて学んで頂けますので、是非ご活用頂けると幸いです。</p>



<ul><li><a href="https://www.youtube.com/channel/UCphTq6mefx_15CjD35qgXgA/join" target="_blank" rel="noreferrer noopener">チャンネルメンバーシップ登録</a></li></ul>



<div class="wp-block-codoc-codoc-block"><div class="codoc-entries" data-without-body="1" id="codoc-entry-kpeVJqoY0w" ></div></div>The post <a href="https://tomosta.jp/news/git-master-start/">Git/SourceTreeマスター講座をスタートしました（有料講座）</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
					<wfw:commentRss>https://tomosta.jp/news/git-master-start/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">2605</post-id>	</item>
		<item>
		<title>JavaScriptのwhile構文で万年カレンダーを作ろう</title>
		<link>https://tomosta.jp/article/js-while-calendar/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Wed, 01 Dec 2021 03:12:34 +0000</pubDate>
				<category><![CDATA[入門記事]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=2416</guid>

					<description><![CDATA[<p>JavaScriptで同じような処理を繰り返したいときに使えるwhile構文を使って、万年カレンダーを作ってみましょう。</p>
The post <a href="https://tomosta.jp/article/js-while-calendar/">JavaScriptのwhile構文で万年カレンダーを作ろう</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<p>JavaScriptを初めとしたプログラミング言語では、同じような作業を何度も繰り返す処理が非常に得意です。ここでは、JavaScriptの「while」という構文を使って万年カレンダーを作ってみましょう。</p>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="【JS】while構文で万年カレンダーを作ろう" width="1220" height="686" src="https://www.youtube.com/embed/VFNMJL5HaFk?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<h2>HTMLを準備しよう</h2>



<p>まずはHTMLを準備します。Visual Studio CodeとEmmetなどを使うと楽でしょう。次のようなHTMLを準備します。</p>



<pre class="wp-block-code"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;万年カレンダー&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<p>この、<code>&lt;body&gt;</code>タグの中にJavaScriptを記述していきます。</p>



<h2>for構文とwhile構文</h2>



<p>繰り返し構文には、大きく分けてfor構文とwhile構文があります。これは、書き方が違うだけで同じ事ができます。まずは、for構文を使ってみましょう。次のようなプログラムを作成してみます。</p>



<pre class="wp-block-code"><code>&lt;script&gt;
for (let i=0; i&lt;10; i++) {
  document.write(i + '&lt;br&gt;');
}
&lt;/script&gt;</code></pre>



<p>これで作成したHTMLファイルをブラウザーに表示すると、次のように数字が羅列されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2418" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-92/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2418" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>真ん中の数字を大きくすれば、何度も繰り返して表示させることができます。</p>



<pre class="wp-block-code"><code><meta charset="utf-8">for (let i=0; i&lt;10000; i++) {</code></pre>



<h3>for構文の書式</h3>



<p>for構文は、次のような書式になっています。</p>



<pre class="wp-block-code"><code>for (初期化; 繰り返し条件; 更新処理) {
  繰り返す処理
}</code></pre>



<p>かなり特殊な構文ですが、3つの要素を1つのカッコの中に記述してしまっています。先のプログラムの場合、次のような要素を指定しています。</p>



<figure class="wp-block-flexible-table-block-table is-style-stripes"><table class=""><tbody><tr><th>初期化</th><td>let i=0</td><td>変数iに0を代入する</td></tr><tr><th>繰り返し条件</th><td>i&lt;10</td><td>iが10未満の間</td></tr><tr><th>更新処理</th><td>i++</td><td>iに1を加える</td></tr><tr><th>繰り返す処理</th><td><meta charset="utf-8">document.write(i + &#8216;&lt;br&gt;&#8217;);</td><td>iを画面に表示する</td></tr></tbody></table></figure>



<p><code>i++</code>というのは「インクリメント」という処理で、変数に1を加えて代入し直すという処理を一気に行う演算子です。つまりここでは、「0で準備したiという変数が10未満の間、1ずつ加えながらiを画面に表示する」という処理になります。</p>



<p>これによって、0から9まで画面に表示されたというわけです。</p>



<h3>while構文はfor構文の書き換え</h3>



<p>while構文も、書き方が違うだけで書くことはfor構文と同じです。先のプログラムは次のように書き換えることができます。</p>



<pre class="wp-block-code"><code>&lt;script&gt;
let i = 0; // 初期化
while (i&lt;10) { // 繰り返し条件
  document.write(i + '&lt;br&gt;'); // 繰り返す処理
  i++;  // 更新処理
}</code></pre>



<p>これで同じように動作します。上記にコメント（//以降の文字列）を記述したとおり、同じ事が書かれていますね。</p>



<p>そのため、簡単な繰り返し条件の場合はfor構文の方が、簡潔に記述する事ができます。しかし、条件が複雑になったり、複数の条件を重ねて繰り返したい場合などには、for構文に記述しようとすると複雑になりすぎてしまうため、このような場合にwhile構文を利用していきます。</p>



<h2>万年カレンダーを作ろう</h2>



<p>それでは、万年カレンダーを作っていきましょう。まずは、ある年の元日の日付で<code>Date</code>オブジェクトを作成します。</p>



<pre class="wp-block-code"><code>&lt;script&gt;
const thisYear = 2021; // 今年の年
let day = new Date(thisYear, 0, 1);
document.write(day.getFullYear());
&lt;/script&gt;</code></pre>



<p>これで、画面には「2021」と表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2426" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-1-18/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2426" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-1.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここでは、最初に<code>thisYear</code>という変数を準備して、この記事の執筆年である2021を代入しています。そして、この変数を使って<code>Date</code>オブジェクトを作成します。なお、<code>Date</code>オブジェクトは②番目のパラメーターが特殊で、1月を指定する場合は「0」にする必要があるので、ここでは1月1日という意味で「0, 1」と指定しています。</p>



<p>そしたらこれで、オブジェクトができあがるので<code>getFullYear()</code>という、年を知るためのメソッドを使って画面に表示してみました。これで、オブジェクトの準備が完了です。</p>



<h3>日付をすべて表示しよう</h3>



<p>次に、<code>document.write</code>メソッドを使ってその他の要素も表示してみましょう。次のように追加します。</p>



<pre class="wp-block-code"><code>...
document.write(day.getFullYear());
<strong>document.write('/');
document.write(day.getMonth() + 1);
document.write('/');
document.write(day.getDate());</strong>
...</code></pre>



<p>これで画面には、スラッシュ区切りの日付が表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2430" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-2-16/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2430" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-2.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p><code>getMonth()</code>メソッドは、やはり月から1を引いた数が取得されるので、1を加えて表示しています。</p>



<p>さらに、曜日も表示してみましょう。次のように追加します。</p>



<pre class="wp-block-code"><code>...
<meta charset="utf-8">document.write(day.getDate());
<strong>document.write('（' + day.getDay() + '）');
</strong>...</code></pre>



<p>これで、次のように曜日が数字で表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2434" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-3-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2434" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-3.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p><code>getDay()</code>というメソッドは、日曜日を0、月曜日を1という具合に数字にして取得できるメソッドです。ここでは、2021年1月1日が金曜日だったので、5という数字が表示されました。</p>



<h3>日付を加えよう</h3>



<p>これで、元日の日付を表示できました。では、別の日の日付を表示するにはどうしたら良いでしょう？　ここでは、<code>setDate()</code>というメソッドを利用します。次のように追加してみましょう。</p>



<pre class="wp-block-code"><code>...
let day = new Date(thisYear, 0, 1);
<strong>day.setDate(day.getDate() + 1);
</strong>document.write(day.getFullYear());
...</code></pre>



<p>これで、今度は1月2日土曜日の日付が表示されました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2437" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-4-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2437" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-4.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p><code>setDate()</code>というメソッドは、「日付を設定する」というメソッドでパラメーターに数字を指定すると、その日に指定されます。ここでは、さらにパラメーターの中で今日の日付を取得する<code>getDate()</code>を利用して、それに1を加えているため「次の日」の日付を設定しています。これによって、1月2日の日付に変化しました。</p>



<p>このメソッドの便利な点は、月や年をまたいでも日付がおかしな設定にはなりません。例えば、32などという数字を与えても、31日しかなければ翌月に変わって2月1日になるなど、自動的に計算を行ってくれます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2439" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-5-13/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2439" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-5.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そのため、このメソッドを使って日付を更新しながら繰り返していけば、カレンダーが作れることになります。</p>



<h3>繰り返し構文を作ろう</h3>



<p>それではプログラムを次のように変えていきましょう。</p>



<pre class="wp-block-code"><code>    &lt;script&gt;
        const thisYear = 2021; // 今年の年
        let day = new Date(thisYear, 0, 1);

        while (day.getFullYear() === thisYear) {
            document.write(day.getFullYear());
            document.write('/');
            document.write(day.getMonth() + 1);
            document.write('/');
            document.write(day.getDate());
            document.write('（' + day.getDay() + '）');
            document.write('&lt;br&gt;');

            // 1日足す
            day.setDate(day.getDate() + 1);
        }
    &lt;/script&gt;
</code></pre>



<p>すると、2021年のすべての日付が表示されるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2442" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-6-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2442" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-6.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ここで、<code>while</code>構文の条件をみてみましょう。</p>



<pre class="wp-block-code"><code>while (day.getFullYear() === thisYear) {</code></pre>



<p><code>getFullYear()</code>メソッドは先の通り、年を取得するためのメソッドです。そのため、2021が取得されます。また、<code>thisYear</code>も2021を代入しているので、ここでは等しい（===）という条件が成り立つので、繰り返し処理が発生します。</p>



<p>処理では日付を画面に表示した後、1日を足しています。こうすることで、どんどんと日付が更新されながら画面に表示されています。</p>



<p>そして、2021年12月31日を出力した後、1が加わると、2022年1月1日になります。すると、<code>getFullYear()</code>メソッドで取得できる年も「2022」になってしまい、左記の条件が成り立たなくなります。そのため、ここで繰り返し処理が終わるというわけです。</p>



<h3>曜日を日本語で表示しよう</h3>



<p>最後に、曜日が数字のままでは分かりにくいので日本語に変えてみましょう。ここでは、「配列」を使えば数字を日本語に変えることができます。まずは、次のような配列を準備します。</p>



<pre class="wp-block-code"><code>const week = &#91;'日', '月', '火', '水', '木', '金', '土'];</code></pre>



<p>そして、画面に出力する箇所で配列を出力するように変更します。</p>



<pre class="wp-block-code"><code>document.write('（' + week&#91;day.getDay()] + '）');</code></pre>



<p>これで、曜日が日本語で表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="2444" data-permalink="https://tomosta.jp/article/js-while-calendar/attachment/image-7-11/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-7" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-2444" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/12/image-7.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>プログラム全文</h2>



<pre class="wp-block-code"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;万年カレンダー&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;script&gt;
        const thisYear = 2021; // 今年の年
        let day = new Date(thisYear, 0, 1);
        const week = &#91;'日', '月', '火', '水', '木', '金', '土'];

        while (day.getFullYear() === thisYear) {
            document.write(day.getFullYear());
            document.write('/');
            document.write(day.getMonth() + 1);
            document.write('/');
            document.write(day.getDate());
            document.write('（' + week&#91;day.getDay()] + '）');
            document.write('&lt;br&gt;');

            // 1日足す
            day.setDate(day.getDate() + 1);
        }
    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>The post <a href="https://tomosta.jp/article/js-while-calendar/">JavaScriptのwhile構文で万年カレンダーを作ろう</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">2416</post-id>	</item>
		<item>
		<title>Microsoft EdgeとInternet Explorerってどう違うの？　Chromeの仲間ってどういう事？</title>
		<link>https://tomosta.jp/blog/edge-vs-ie/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Fri, 15 Oct 2021 05:05:50 +0000</pubDate>
				<category><![CDATA[ブログ]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=2292</guid>

					<description><![CDATA[<p>2021年に登場したMicrosoftの最新OS『Windows 11』には、標準ウェブブラウザーとして「Microsoft Edge（以下、Edge）」が搭載されています。 Microsoftといえば、長らく「Inte [&#8230;]</p>
The post <a href="https://tomosta.jp/blog/edge-vs-ie/">Microsoft EdgeとInternet Explorerってどう違うの？　Chromeの仲間ってどういう事？</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<p>2021年に登場したMicrosoftの最新OS『Windows 11』には、標準ウェブブラウザーとして「Microsoft Edge（以下、Edge）」が搭載されています。</p>



<p>Microsoftといえば、長らく「Internet Explorer（IE）」というウェブブラウザーをWindowsに搭載していましたが、現在では開発やサポートを終了し、この「Edge」に軸足を移しています。</p>



<p>では、Microsoft EdgeとMicrosoft Internet Explorerはなにが違うのでしょうか？　さらに、同じEdgeでも実は別のものが存在するのをご存じでしょうか？　ここでは、そんなMicrosoft Edgeの秘密について紹介しましょう。</p>



<h2>ブラウザーの本体はレンダリングエンジン</h2>



<p>ここで、IEとEdgeの違いを「ソフトの見た目」とか「アイコンや名前」という部分で語ってしまうとおかしな事になってしまうので、それは無視した上で「ブラウザーとしてなにが違うのか」という部分に着目すると「レンダリングエンジンが違う」というのが結論になります。</p>



<p>レンダリングエンジンとは、HTMLやCSSなどを解釈してウェブページの画面を作り上げるためのエンジン部分です。このレンダリングエンジンの解釈によって、ウェブページの作り方に違いが出てしまうため、同じHTMLの内容を記述しているにもかかわらず、少しだけ見た目が違うとか、うまく再現されないなどの現象が発生してしまいます。</p>



<p>実際、以前はレンダリングエンジンを各ブラウザーメーカーが独自に開発していたため、IEと他のブラウザーで見た目が異なるということが頻発していました。</p>



<p>そこで、Appleは同社のウェブブラウザー「Safari」を開発するときに、レンダリングエンジンを独自に開発するのではなく、すでにオープンソースとして開発が進められていた「WebKit（当時はKHTML）」というエンジンを搭載します。つまり、SafariというブラウザーはWebKitにブラウザーの機能をかぶせただけのものだったのです。</p>



<p>しかしこれが功を奏し、Safariは開発に苦労することなくウェブの最新技術に追従できるブラウザーとして存在感を強めることになります。</p>



<h2>WebKit系が世界を制覇</h2>



<p>その後WebKitは、Googleにも認められ、同社の「Chrome」にも搭載されるようになります。なお、Googleはその後WebKitを改良して「Blink」という別のレンダリングエンジンを開発し、現在はBlinkがベースになってはいるものの、「WebKit系」という意味では同じようなエンジンとなります。</p>



<p>その後もWebKit系を採用するブラウザーベンダーは次々に登場し、PlayStationなどのゲーム機を始め、新興メーカーが開発するブラウザーなどにも採用されるようになりました。この時点で、レンダリングエンジンとしては次のようなものが残っていました。</p>



<ul><li>Trident &#8211; Internet Explorerのレンダリングエンジン。Microsoftが開発。</li><li>Gecko &#8211; Firefoxで採用されているレンダリングエンジン。その他いくつかのブラウザーが採用している</li><li>WebKitおよびBlink &#8211; SafariやChrome等で採用され、圧倒的に人気のレンダリングエンジン。</li></ul>



<p>こうして、IEの肩身が狭くなっていったのです。</p>



<h2>EdgeHTMLの開発に力を注ぐMicrosoft</h2>



<p>こうして、WebKit系のブラウザーの人気が上がるにつれ、MicrosoftもようやくTridentに見切りをつけて、新しいレンダリングエンジンとして「EdgeHTML」というエンジンを開発します。そして、IE11に一時搭載された後、新しいブラウザーのとして「Microsoft Edge」を開発します。</p>



<p>ただ、結論からいえば、このレンダリングエンジンはうまく行かず、「現在のEdge」には搭載されていません。つまり、Microsoft Edgeには正確には2種類あるのです。（EdgeHTMLを搭載したEdgeを「旧Edge」などと呼びます）</p>



<p>EdgeHTMLを搭載したEdgeは、Windows 10などに搭載されましたが、シェアは上がらずGoogle Chromeに圧倒的な差をつけられてしまいます。そこで2020年、MicrosoftはBlinkをレンダリングエンジンに採用した新しいEdge（これを、Chromium Edgeなどと呼びます）を開発し、現在のWindows 11などに搭載します。</p>



<p>これにより、現在利用されているブラウザーは、Firefoxを除けばほとんどがWebKit系のブラウザーという事になります。これにより、ウェブ制作者はブラウザーごとの表示の差異をあまり気にせず、ウェブ制作ができるようになったというわけです。</p>



<p>今後も、WebKitやBlinkの進化に目が離せません。</p>



<ul><li><a href="https://www.microsoft.com/ja-jp/edge">Microsoft Edge</a></li></ul>The post <a href="https://tomosta.jp/blog/edge-vs-ie/">Microsoft EdgeとInternet Explorerってどう違うの？　Chromeの仲間ってどういう事？</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">2292</post-id>	</item>
		<item>
		<title>『PHP 7/8 プログラミングマスター講座』がUdemyメディアに取り上げられました</title>
		<link>https://tomosta.jp/news/php-master-for-udemy-media/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Sat, 28 Aug 2021 01:32:39 +0000</pubDate>
				<category><![CDATA[お知らせ]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=2159</guid>

					<description><![CDATA[<p>Udemyで販売中の『PHP 7/8 プログラミングマスター講座』が、Udemyメディアの「オンライン学習Udemyで上半期最も学ばれた講座7選 （Tech編／人気のPython,GitからReactまで）」に取り上げら [&#8230;]</p>
The post <a href="https://tomosta.jp/news/php-master-for-udemy-media/">『PHP 7/8 プログラミングマスター講座』がUdemyメディアに取り上げられました</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<p>Udemyで販売中の『PHP 7/8 プログラミングマスター講座』が、Udemyメディアの「オンライン学習Udemyで上半期最も学ばれた講座7選 （Tech編／人気のPython,GitからReactまで）」に取り上げられました。</p>



<p>本講座はおかげさまで、多くの方々にご受講頂いております。PHPをしっかり学びたいという方は、是非ご利用ください。ただし、内容的には中級的な内容となるため、先に以下の「PHP+MySQL（MariaDB） Webサーバーサイドプログラミング入門」をご受講いただく事をお勧めいたします。</p>



<ul><li><a href="https://www.udemy.com/course/php7basic/?referralCode=40B4412347A37B96D388" target="_blank" rel="noreferrer noopener">PHP+MySQL（MariaDB） Webサーバーサイドプログラミング入門</a></li><li><a href="https://www.udemy.com/course/php-master/?referralCode=397F9F422F1A5A30E155">PHP 7/8 プログラミング マスター講座</a></li></ul>



<ul><li><a href="https://udemy.benesse.co.jp/career/recommend/2021-1sthalf-tech.html?utm_source=pocket_mylist">オンライン学習Udemyで上半期最も学ばれた講座7選 （Tech編／人気のPython,GitからReactまで）</a></li></ul>The post <a href="https://tomosta.jp/news/php-master-for-udemy-media/">『PHP 7/8 プログラミングマスター講座』がUdemyメディアに取り上げられました</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">2159</post-id>	</item>
		<item>
		<title>この夏学びたいプログラミング言語10選</title>
		<link>https://tomosta.jp/blog/summer_study_2021/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Fri, 30 Jul 2021 15:41:37 +0000</pubDate>
				<category><![CDATA[ブログ]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=1954</guid>

					<description><![CDATA[<p>一部の都府県が緊急事態宣言下のこの夏、外出を控えて自宅でのんびりしている方も少なくないでしょう。せっかくなので、この機会にプログラミングを学んでみませんか？ ここでは、この夏、学んでおきたいプログラミング言語をご紹介しま [&#8230;]</p>
The post <a href="https://tomosta.jp/blog/summer_study_2021/">この夏学びたいプログラミング言語10選</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="この夏学びたいプログラミング言語 10選 2021" width="1220" height="686" src="https://www.youtube.com/embed/uf3OPI-juHU?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>一部の都府県が緊急事態宣言下のこの夏、外出を控えて自宅でのんびりしている方も少なくないでしょう。せっかくなので、この機会にプログラミングを学んでみませんか？</p>



<p>ここでは、この夏、学んでおきたいプログラミング言語をご紹介します。参考書籍や、動画のリンクもつけましたので、ぜひ順番に学んでいきましょう。</p>



<p><span style="color:#3d3d3d" class="has-inline-color">※ 書籍のアドレスはアフィリエイトリンクです</span></p>



<div class="wp-block-ideabox-toc ib-block-toc" data-anchors='h2,h3,h4,h5,h6' data-collapsable='true' ><div class="ib-toc-container ib-toc-list-style-numbers ib-toc-hierarchical ib-toc-expanded"><div class="ib-toc-header"><div class="ib-toc-header-title">Table of Contents</div><div class="ib-toc-header-right"><span class="ib-toc-icon-collapse"><span class="dashicon dashicons dashicons-minus"></span></span><span class="ib-toc-icon-expand"><span class="dashicon dashicons dashicons-plus"></span></span></div></div><div class="ib-toc-separator" style="height:2px"></div><div class="ib-toc-body"><ol class="ib-toc-anchors"></ol></div></div></div>



<h2>1. HTML Living Standard</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1956" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/2055959bd4438a328b81faecfc8d4da1/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="2055959bd4438a328b81faecfc8d4da1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1956" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/2055959bd4438a328b81faecfc8d4da1.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>まずは、今やどんな分野でも基礎の知識といえる、HTMLです。ウェブページを構築するのはもちろん、この後紹介する Reactなどのプログラミング言語でも必須の知識となっています。</p>



<p>HTMLはこれまで、W3Cという標準化団体によって定期的に「勧告」がされ、HTML3.0や HTML5など、バージョン表記がされてきました。しかし、2020年に仕様の策定がブラウザーベンダーが主導する「WHATWG」に移され、バージョン表記をやめて『Living Standard』として、常に最新の仕様がタイムリーにリリースされる形に変わりました。</p>



<p>すでに、HTMLは知っているという方でも、この機会に改めて確認をしておきましょう。</p>



<ul><li><a href="https://youtu.be/PNPYCDHGUBQ">[YouTube] HTML Living Standard入門</a></li><li><a href="https://www.udemy.com/course/html-css-js/?referralCode=4B62CC6838D26E1AC5DA">[Udemy] [HTML/CSS/JavaScript] フロントエンドエンジニアになりたい人の Webプログラミング入門</a></li><li><a href="https://amzn.to/36Axr53">[書籍] 1冊ですべて身につくHTML &amp; CSSとWebデザイン入門講座</a></li><li><a href="https://amzn.to/3yRxZzG">[書籍] これからWebをはじめる人のHTML＆CSS、JavaScriptのきほんのきほん</a></li><li><a href="https://amzn.to/3yVsPCJ">[書籍] HTML5&amp;CSS3デザイン 現場の新標準ガイド【第2版】</a></li></ul>



<h2>2. ECMAScript（JavaScript）</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1957" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/92e7014f433423a7e66338779fe2580a/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="92e7014f433423a7e66338779fe2580a" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1957" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/92e7014f433423a7e66338779fe2580a.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>JavaScriptは、現代のプログラミングにおいて、最も重要な言語といえます。ウェブの技術では、完全に独壇場であることはもちろん、今ではモバイルアプリやデスクトップのアプリケーション開発、サーバー上など、オールマイティに活用できます。</p>



<p>JavaScriptは、Ecma Internationalという標準化団体によって「ECMAScript」という規格として定められています。ECMA Script 2015（ES6）からは、変数の宣言や関数の利用などに大幅な変更が加えられ、各ブラウザーでも対応が進んでいます。</p>



<p>古い書き方をしている方も、是非新しい書き方に慣れていきましょう。</p>



<ul><li><a href="https://www.youtube.com/watch?v=pnsieVYy72M">[YouTube] しまぶーの IT大学</a></li><li><a href="https://amzn.to/3wybAWl">[書籍] 改訂新版JavaScript本格入門 ～モダンスタイルによる基礎から現場での応用まで</a></li></ul>



<h2>3. React / Next.js</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1958" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/e4e5f6f1945ad1e563a02d6b3ff2af89/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="e4e5f6f1945ad1e563a02d6b3ff2af89" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1958" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/e4e5f6f1945ad1e563a02d6b3ff2af89.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ウェブの開発において、JavaScriptをそのまま利用するというのはまれで、ライブラリーやフレームワークを利用します。これまで、JavaScriptのライブラリーといえば「jQuery」が定番でした。</p>



<p>しかし近年、より開発しやすいライブラリーやフレームワークが登場してきています。Vue.jsや Riot.jsなど数多くのライブラリーの中でも、Facebook社を中心に開発された「React」が海外を中心に人気を集めています。</p>



<p>特に、Reactベースのフレームワークである「Next.js」と組み合わせて使われることが多く、近年流行している「ヘッドレスCMS」の開発などに活用されています。</p>



<ul><li><a href="https://www.youtube.com/watch?v=YoIQ_FIBlYY">[YouTube] Next.js超入門 セットアップから Vercelへの公開まで</a></li><li><a href="https://amzn.to/2VFuxKd">[書籍] React.js＆Next.js超入門 第2版</a></li></ul>



<h3>【言葉】ライブラリーとフレームワーク</h3>



<p>ライブラリーとは、HTMLファイルなどに取り込んで使うもので、後から機能などを追加して使います。小規模なページの制作などに適しています。</p>



<p>対してフレームワークは骨組みとして使われ、はじめからフレームワークを利用して、その上にウェブサイトやシステムを丸ごと構築します。大規模なシステムの開発に適しています。</p>



<p>ただ近年は、ライブラリーとフレームワークという言葉の定義は曖昧になり、どちらの意味にも使われることがあります。</p>



<h3>【言葉】ヘッドレスCMS</h3>



<p>従来のコンテンツ管理システム（CMS）は、管理部分と表示部分を両方担っていました。しかし、サーバー上で動作する CMSは処理に時間がかかってしまうため、表示速度のネックになっていました。</p>



<p>そこで、管理部分と表示部分で処理を分け、管理部分だけに特化したのが「ヘッドレスCMS」です。代表的なサービスには、Contentfulや microCMSなどがあります。</p>



<p>利用には、表示部分を JavaScriptなどで実装するのが必要で、そのためのフレームワークである「Gatsby」などもあります。</p>



<h2>4. TypeScript</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1959" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/aadf2471cbc95529186289a92a7d9f42/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="aadf2471cbc95529186289a92a7d9f42" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1959" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aadf2471cbc95529186289a92a7d9f42.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>JavaScriptは手軽な反面、「型」という概念がないというデメリットがあります。初学者のうちは、型の重要性は理解しにくいですが、チームでプログラミング開発をする場合や、大規模な開発をする場合は型の有無は死活問題です。</p>



<p>そこで、Microsoftが開発したJavaScriptの互換言語（スーパーセットといいます）が TypeScriptです。変数やクラスに型をつけることができ、厳格なエラーチェックが行えます。作り終わったら、JavaScriptに変換できるので、従来のブラウザーでも動作可能。今では、TypeScriptを開発に採用している現場も少なくありません。</p>



<p>現在では、JavaScriptの学習の代わりに TypeScriptから始めることもあります。</p>



<ul><li><a href="https://www.youtube.com/playlist?list=PLh6V6_7fbbo9_OAa_Uu8j6oTaHogUHhW4">[YouTube] TypeScriptで学ぶJavaScript(ES6)</a></li><li><a href="https://amzn.to/3eeiBFt">[書籍] 実践TypeScript</a></li></ul>



<h2>5. GraphQL</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1960" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/1e72b240675d395468bf9b8938578631/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="1e72b240675d395468bf9b8938578631" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1960" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/1e72b240675d395468bf9b8938578631.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>JavaScriptでアプリケーションを作成する際、必須になるのがサーバーとのデータのやり取りです。そこでは「API（Application Programming Interface）」という窓口を通じてやりとりをするのですが、ここで一般的に利用されているのは「REST API」と呼ばれる技術でした。</p>



<p>しかし、REST APIには無駄のデータのやり取りが多く、効率が悪かったため Facebookらによって新しいインタフェースである「GraphQL」が開発されました。</p>



<p>簡単なフォーマットで問い合わせ（Query）の書式を作成し、サーバーに問い合わせをすれば適切なデータが必要な量だけ取得でき、効率よく開発することができます。</p>



<p>ヘッドレスCMSや、SPA（Single Page Application）の開発などに今後必須となっていくので、この機会に学習しておくとよいでしょう。</p>



<ul><li><a href="https://amzn.to/3xDDf9E">[書籍] 初めてのGraphQL ―Webサービスを作って学ぶ新世代API</a></li></ul>



<h2>6. PHP / WordPress</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1961" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/0852637b914fd1603f1e1ff2bd1f2b69/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="0852637b914fd1603f1e1ff2bd1f2b69" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1961" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/0852637b914fd1603f1e1ff2bd1f2b69.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>従来型CMSの代表として揺るぎないのがWordPress。ヘッドレスCMSが台頭していますが、WordPressはヘッドレスCMSとしても利用できるため、まだまだ人気が衰えることはありません。</p>



<p>WordPressの開発言語の PHPも、最新バージョンの 8となり、懸案であった動作速度なども劇的に改善しており、こちらも人気は衰えません。是非、押さえておきたい言語といえます。</p>



<ul><li><a href="https://www.youtube.com/playlist?list=PLh6V6_7fbbo9tiOuud_L0x88DZfNMAx9D">[YouTube] WordPress開発講座</a></li><li><a href="https://www.udemy.com/course/wordpress_master/?referralCode=0F25EA7ADADE55D90BCE">[Udemy] WordPress開発マスター講座</a></li><li><a href="https://amzn.to/3wAu74y">[書籍] 世界一わかりやすいWordPress　導入とサイト制作の教科書［改訂2版］</a></li></ul>



<h2>7. Dart / Flutter</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1962" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/7f3c3dd5922d824b62cb75237a67ae59/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="7f3c3dd5922d824b62cb75237a67ae59" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1962" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/7f3c3dd5922d824b62cb75237a67ae59.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>スマホアプリの開発といえば、これまでは iOSなら Swift、Androidなら Kotlinと別々の言語が必要でした。そのため、マルチデバイスのアプリを開発するには、かなりの労力がかかりました。</p>



<p>そこで、Googleが開発しているのがマルチデバイス技術の Flutterです。独自の Dartという言語を使うものの、JavaScriptに似た構文で開発ができ、iOS/Android両対応のアプリを開発できます。さらには、ウェブやデスクトップアプリなどの開発なども可能なように開発が進められており、今後非常に注目の技術といえます。</p>



<ul><li><a href="https://www.youtube.com/channel/UCReuARgZI-BFjioA8KBpjsw">[YouTube] KBOYのFlutter大学</a></li><li><a href="https://amzn.to/3kbl1Zt">[書籍] 基礎から学ぶ Flutter</a></li></ul>



<h2>8. Python</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1963" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/66d4a18a0510ebf5da48247d84adf607/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="66d4a18a0510ebf5da48247d84adf607" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1963" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/66d4a18a0510ebf5da48247d84adf607.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>今、最も人気のある言語といえば Pythonがあげられます。学習しやすい上に、非常に強力で人工知能の開発にも活用されています。ウェブ上でも Djangoというフレームワークで活用でき、手軽な開発ができます。</p>



<p>今からプログラミング言語を学習したいという場合には、Pythonからスタートするとスムーズでしょう。</p>



<ul><li><a href="https://www.youtube.com/playlist?list=PLh6V6_7fbbo-MthKEzA7e7_rPhUx2mqj-">[YouTube] Python入門</a></li><li><a href="https://amzn.to/3AVwEJI">[書籍] Python 1年生 体験してわかる！会話でまなべる！プログラミングのしくみ</a></li></ul>



<h2>9. Bubble</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1964" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/355925675064cc8407fb258e5eb304d6/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="355925675064cc8407fb258e5eb304d6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1964" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/355925675064cc8407fb258e5eb304d6.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「ノーコード」という言葉が流行しています。プログラミングで記述する「コード」を必要としないため「No Code」と呼ばれ、ノーコードツールを利用してビジネスアプリや、簡単なスマホアプリを開発できるというもの。</p>



<p>Googleや Amazonなども続々とノーコードツールに参入していて、今年以降より一般的になっていくでしょう。なかでも、先駆者として開発されているのが「Bubble」と「Adalo」です。</p>



<p>デザイン性に優れた Adaloと、本格的な開発が行える Bubbleという住み分けがありますが、しっかり学習するなら Bubbleがおすすめです。</p>



<ul><li><a href="https://www.youtube.com/channel/UCa3cFggd3BrJ6qq5lw8P_9w">[YouTube] NoCode School &#8211; ノーコードスクール &#8211;</a></li><li><a href="https://amzn.to/2T6hwrX">[書籍] 基礎から学ぶ ノーコード開発</a></li></ul>



<h2>10. WebFlow</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1965" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/d2ede0e671719cbc076c482ce5bf4cad/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="d2ede0e671719cbc076c482ce5bf4cad" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1965" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/d2ede0e671719cbc076c482ce5bf4cad.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>ウェブサイトの制作でのノーコードの例外ではありません。ウェブサイトの制作には古くから、「オーサリングツール」ト呼ばれるツールで HTMLや CSSを意識することなくページを制作するというスタイルは存在していましたが、なかなか思うようなデザインができずに歯がゆい思いをすることもありました。</p>



<p>しかし近年のノーコードツールの発展はめざましく、Wixや Jimdo、国産では STUDIOなど、デザイン性の高いページを制作できるツールが登場してきました。</p>



<p>なかでも、WebFlowは英語インターフェイスしかないものの、プロでも唸るほどの高機能を誇っていて、HTMLや CSSを手でしたのと同じようなデザイン性の高いページを作ることができます。</p>



<p>その分、専門的な知識や難解のツールになれる必要がありますが、学習する価値は十分にあります。</p>



<ul><li><a href="https://www.youtube.com/channel/UCsGq3nlFuMApRlZ5KLyQarA/videos">[YouTube] LikePay dev Academy</a></li><li><a href="https://www.youtube.com/channel/UCELSb-IYi_d5rYFOxWeOz5g">[YouTube] WebFlow（英語）</a></li></ul>



<h2>まとめ</h2>



<figure class="wp-block-image size-large"><img data-attachment-id="1966" data-permalink="https://tomosta.jp/blog/summer_study_2021/attachment/aeb242a6ee13a5e85f3de13b5040adc8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="aeb242a6ee13a5e85f3de13b5040adc8" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1966" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/aeb242a6ee13a5e85f3de13b5040adc8.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>いかがだったでしょうか？　さすがにこの夏に全部を学習するのは難しいと思いますが、まずは HTML/JavaScript/React位までを目標に学習を始め、その後ノーコードに行くか、WordPressに行くか、はたまた JavaScriptを極めるかなど、自分の将来に合わせて学習するものを選んでみて頂けると幸いです。</p>



<p>是非、コツコツと学習を進めていきましょう。私の YouTubeでも、常に学習に役立つ動画をアップしていますので、もしよろしければ是非ともチャンネル登録をして頂けると幸いです。</p>The post <a href="https://tomosta.jp/blog/summer_study_2021/">この夏学びたいプログラミング言語10選</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1954</post-id>	</item>
		<item>
		<title>WordPress 5.8リリース。変更点とバージョンアップの注意点</title>
		<link>https://tomosta.jp/blog/wordpress5-8/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Thu, 22 Jul 2021 12:54:12 +0000</pubDate>
				<category><![CDATA[ブログ]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=1864</guid>

					<description><![CDATA[<p>WordPressが、5.8にバージョンアップしました。WordPressは小数第2位がマイナーバージョン、整数部と小数第1位がメジャーバージョンとされています。（5.9の次が 6.0になる予定？） メジャーバージョンに [&#8230;]</p>
The post <a href="https://tomosta.jp/blog/wordpress5-8/">WordPress 5.8リリース。変更点とバージョンアップの注意点</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="WordPress 5.8で変わった点とバージョンアップの注意点" width="1220" height="686" src="https://www.youtube.com/embed/pkTBE2dwB-s?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p>WordPressが、5.8にバージョンアップしました。WordPressは小数第2位がマイナーバージョン、整数部と小数第1位がメジャーバージョンとされています。（5.9の次が 6.0になる予定？）</p>



<p>メジャーバージョンには、ジャズ奏者からコードネームがつけられ、5.8は「Tatum」と名付けられました。</p>



<p>ここでは、Tatumでなにが変わったのかやバージョンアップ時の注意点、バージョンダウンの方法などを紹介しましょう。</p>



<h2>ウィジットがブロックエディターに</h2>



<p>今回のバージョンで最も大きな変更点は、ウィジット管理がブロックエディターに変化しました。直感的にウィジットを編集できるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1866" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-56/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-56" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1866" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-56.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>投稿テンプレート機能</h2>



<p>投稿や固定ページにテンプレートを作ることができるようになりました。この機能は、標準では無効になっているため、functions.phpに次のように追加する必要があります。</p>



<pre class="wp-block-code"><code>add_theme_support('block-templates');</code></pre>



<p>すると、投稿画面の右側のパネルに「テンプレート」というパネルが準備され、テンプレートを作ることができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1867" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-57/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-57" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1867" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-57.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>テンプレートを変更すると、同じテンプレートを使っているその他の画面も統一して変更が加わります。これによって、特別なページデザインを作ったり、特定の要素を各ページに挿入するなどが可能になります。</p>



<h2>新しいブロックの追加</h2>



<p>テンプレート機能の追加に伴って、サイト名や投稿の一覧などもブロックで追加ができるようになりました。これで、さまざまなレイアウトのテンプレートを作成したり、既存の固定ページなどに投稿一覧などを追加できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1868" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-58/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-58" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1868" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-58.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>アウトラインがリストビューに</h2>



<p>これまで、文書内の構造を一覧できる「アウトライン」がありましたが、これがサイドエリアに表示しっぱなしにできる「リストビュー」に変わりました。巨大な文書内も自由に行き来できるようになりました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1869" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-59/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-59" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1869" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-59.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>おすすめパターンの追加</h2>



<p>「ブロックタイプ又はスタイルを変更」リストの中に「パターン」が追加され、おすすめのパターンからスタイルを変えられるようになります。現状は、クエリーとソーシャルアイコンにのみ実装されていますが、今後順次増加していくとのことです。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1870" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-60/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-60" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1870" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-60.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>画像にデュオトーンフィルターの追加</h2>



<p>画像ブロックには「デュオトーンフィルター」が追加されました。これは、写真を2色に分けて着色するもので、オシャレなアイキャッチを簡単に作ることができます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1871" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-61/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-61" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1871" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-61.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>WebP形式のサポート</h2>



<p>WebPは、新しい画像形式で非常に小さく圧縮できます。Chromeなどを始めじょじょに対応進んでいますが、WordPressではこれまでアップロードができませんでした。5.8からはアップロードが可能になります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1872" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-62/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-62" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1872" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-62.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>theme.jsonの導入</h2>



<p>ビジュアルエディターのカスタマイズが JSONファイルでできるようになりました。テーマフォルダーに「theme.json」という名前のファイルを作成し、例えば次の記述をしましょう。</p>



<pre class="wp-block-code"><code>{
    "version": 1,
    "settings": {
        "color": {
            "palette": &#91;
                {
                    "name": "Black",
                    "slug": "black",
                    "color": "#000000"
                },
                {
                    "name": "White",
                    "slug": "white",
                    "color": "#ffffff"
                }
            ]
        }
    }
}</code></pre>



<p>これにより、色の選択が黒と白だけになります。こうして、オリジナルのカラーパレットを定義できます。この他にもさまざまなカスタマイズができます。こちらは、別の記事にしようと思います。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1873" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-63/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-63" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1873" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-63.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2>5.8は自動アップデートがかかる</h2>



<p>これまで、WordPressはマイナーバージョンアップ（小数点第2位）は自動アップデートが標準で、メジャーアップデートについては手動でアップデートする必要がありました。</p>



<p>しかし、5.6以降の WordPressを新規インストールした場合は、メジャーアップデートも自動アップデートが標準になったようです。</p>



<p>ただし、メジャーアップデートは若干注意が必要です。プラグインやテーマによっては対応できていなくて表示が崩れたり、クラッシュしたりする事がまれにあります。</p>



<p>そのため、バックアップやテスト環境での検証をしてからアップデートするというポリシーのサイトも少なくありません。しかし、最近構築サイトの場合は意図せずバージョンアップされてしまっているケースがあります。</p>



<p>これを無効にする場合には「ダッシュボード→更新」から、「メンテナンスリリースとセキュリティリリースのみの自動更新に切り替えます」リンクをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1874" data-permalink="https://tomosta.jp/blog/wordpress5-8/attachment/image-64/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-64" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1874" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-64.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>あまり推奨されない変更のためか、少し分かりにくい表現になっています。</p>



<h2>意図せぬバージョンアップをバージョンダウンする</h2>



<p>5.8は 7月 22日現在まだ対応できていないプラグインが存在しています。そのため、バージョンアップしてしまった場合はバージョンダウンして利用することができます。</p>



<p>念のため作業前にバックアップを取得しておきましょう。</p>



<p>まずは、次のサイトから旧バージョンをダウンロードします。<br><a href="https://ja.wordpress.org/download/releases/">リリース | WordPress.org 日本語</a></p>



<p>そしたら「wp-content」フォルダーを【除いて】、ファイルやフォルダーをアップロードしてファイルを上書きしましょう。wp-contentには、テーマやプラグインなど、後から自分でインストールしたものなどが含まれているため、これを上書きしてしまうとすべて消えてしまうので注意しましょう。</p>



<p>そして、wp-contentフォルダー内は「languages」フォルダーの中だけ、上書きしましょう。こうして、自分でインストールした</p>



<p>これで旧バージョンに戻す事ができます。</p>



<h2>ノーコードに舵を切った WordPress</h2>



<p>WordPress 5.8の変更点を見て、WordPressはますますノーコードに舵を切ったなと感じました。これまでは、PHPを学んでテーマをカスタマイズしたり、オリジナルのテーマを制作して利用するのが主流でしたが、これからはやることとしては JSONファイルを書き換える程度で、対応したテーマを使ってブロックエディターですべてを作れるようにするのが WordPressの理想としている姿なのかなと感じます。</p>



<p>今後の開発がますます楽しみです。</p>The post <a href="https://tomosta.jp/blog/wordpress5-8/">WordPress 5.8リリース。変更点とバージョンアップの注意点</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1864</post-id>	</item>
		<item>
		<title>Next.js超入門 &#8211; セットアップからVercelへの公開まで</title>
		<link>https://tomosta.jp/article/nextjs-basic/</link>
		
		<dc:creator><![CDATA[たにぐち　まこと]]></dc:creator>
		<pubDate>Thu, 01 Jul 2021 09:00:00 +0000</pubDate>
				<category><![CDATA[入門記事]]></category>
		<category><![CDATA[pickup]]></category>
		<guid isPermaLink="false">https://tomosta.jp/?p=1722</guid>

					<description><![CDATA[<p>Next.jsは、Vercelというホスティングサービスなどを展開する企業が開発している JavaScriptフレームワークです。<br />
Reactという JavaScriptライブラリーをベースに開発されていて、大規模なサイト制作やウェブベースのプログラム開発などが可能なフレームワークとして開発されています。<br />
この講座では、まずは Next.jsのセットアップ方法から簡単なページの制作、公開までの流れを紹介していきましょう。</p>
The post <a href="https://tomosta.jp/article/nextjs-basic/">Next.js超入門 – セットアップからVercelへの公開まで</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></description>
										<content:encoded><![CDATA[<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="c-responsive-container-16-9"><iframe loading="lazy" title="Next.js入門：プログラムを作って Vercelに公開しよう" width="1220" height="686" src="https://www.youtube.com/embed/YoIQ_FIBlYY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>
</div></figure>



<p><a href="https://nextjs.org/" target="_blank" rel="noreferrer noopener">Next.js</a>は、<a href="https://vercel.com/" target="_blank" rel="noreferrer noopener">Vercel</a>というホスティングサービスなどを展開する企業が開発している JavaScriptフレームワークです。</p>



<p><a rel="noreferrer noopener" href="https://ja.reactjs.org/" target="_blank">React</a>という JavaScriptライブラリーをベースに開発されていて、大規模なサイト制作やウェブベースのプログラム開発などが可能なフレームワークとして開発されています。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1724" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-002/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.002" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?resize=1024%2C576&#038;ssl=1" alt="Next.jsとは / Reactベースのフレームワーク / ウェブサイト・ウェブのシステムを作り上げるベース / HTMLを生成して公開もできる" class="wp-image-1724" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.002.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>この講座では、まずは Next.jsのセットアップ方法から簡単なページの制作、公開までの流れを紹介していきましょう。</p>





<h2 id="フレームワークとは">フレームワークとは</h2>



<p>フレームワーク（Framework）とは、「足場」といった意味の英単語です。Reactは「ライブラリー」と呼ばれ、この場合は各ページから Reactを呼び出して利用する形になりますが、フレームワークの場合はサイトやシステム全体のベースとして、その上でプログラムを構築していくことで、全体を統一されたしくみで構築でき、チーム開発や大規模なシステム開発に威力を発揮します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1725" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-003/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.003" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?resize=1024%2C576&#038;ssl=1" alt="ライブラリーは、各ファイルが読み込んで使う。フレームワークはすべてのファイルのベースになる" class="wp-image-1725" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.003.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そのため、逆に小規模なサイト制作などではフレームワークを使うことで、むしろ面倒なことが多くなってしまうこともあり、うまく使い分ける必要があります。</p>



<p>また、各フレームワークは言語やライブラリーに依存して作られていることが多く、好みの言語と組み合わせて利用します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1726" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-004/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.004" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?resize=1024%2C576&#038;ssl=1" alt="言語とフレームワークの関係。Rubyには Rails、PHPには Laravel、Vue.jsには NuxtJS、Reactには Next.jsなど、言語とフレームワークは組み合わせて使う" class="wp-image-1726" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.004.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="next-jsをセットアップしよう">Next.jsをセットアップしよう</h2>



<h3 id="node-jsをインストールしよう">Node.jsをインストールしよう</h3>



<p>Next.jsを利用するには、<a href="https://nodejs.org/ja/" target="_blank" rel="noreferrer noopener">Node.js</a>を利用する必要があります。インストールをまだしていない場合は、<a href="https://nodejs.org/ja/" target="_blank" rel="noreferrer noopener">Node.jsの公式サイト</a>からセットアッププログラムをダウンロードしてセットアップしておきましょう。</p>



<p>ターミナル（macOS）または、PowerShell（Windows）などを起動して、以下のコマンドを入力し、Node.jsが利用できるか確認します。</p>



<pre class="wp-block-code"><code>npx -v</code></pre>



<p>これで、バージョン番号が表示されれば利用できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1741" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-12-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-12" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1741" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-12.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「コマンドが見つかりません」などのエラーメッセージが表示される場合は、セットアップが正しく終わっていないため、再度セットアップしてみましょう。</p>



<h3 id="npxとは">npxとは</h3>



<p>npxというコマンドは、Node.jsのコマンドを実行するためのコマンドです。例えばここでは「create-next-app」というコマンドを npxを通じて使うことで、Next.jsのプロジェクトを作成することができます。</p>



<h3 id="next-jsアプリケーションを作成する">Next.jsアプリケーションを作成する</h3>



<p>それでは、Next.jsのアプリケーションを作成してみましょう。まずは、作業するためのディレクトリーに移動します。例えば、デスクトップなどに「mysite」というディレクトリーを作って、そこにセットアップしてみましょう。</p>



<pre class="wp-block-code"><code>mkdir mysite
cd mysite</code></pre>



<p>そして、Next.jsのプロジェクトを作成します。</p>



<pre class="wp-block-code"><code>npx create-next-app</code></pre>



<p>これで、Next.jsがインストールされます。途中、プロジェクトの名前を問われるので、ここでは「next-site」と入力しましょう。新しいディレクトリーが作られて、この中に各ファイルがダウンロードされます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1742" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-13-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-13" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1742" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-13.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="next-jsでコピーされるファイル群">Next.jsでコピーされるファイル群</h3>



<p>Next.jsをインストールすると、次のような各ファイル群が自動的に作成されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1744" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-007-1/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.007-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?resize=1024%2C576&#038;ssl=1" alt="生成されるファイルの図" class="wp-image-1744" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.007-1.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>このように、Next.jsは各ディレクトリーによって役割が決まっていて、決められた場所に決められたファイル名で保存する必要があります。このような約束事があることで、チームで開発する時などにも共通のルールを自然に決めることができます。</p>



<h3 id="ビルドしよう">ビルドしよう</h3>



<p>Next.jsのプロジェクトは、内容を書き換えてもすぐには反映できません。「ビルド」という作業を行なって、HTMLなどを生成しなければなりません。これを行うのが「build」コマンドです。</p>



<p>作成したプロジェクトのディレクトリーに移動して、次のように入力しましょう。</p>



<pre class="wp-block-code"><code>cd next-site
npm run build</code></pre>



<p>これで、ビルド作業が行われます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1745" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-14-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-14" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1745" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-14.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>この状態で、対応したウェブサーバーなどにアップロードすれば表示ができるのですが、その前に手元のコンピューターでプレビューをしておきましょう。続けて、次のようなコマンドを打ち込みます。</p>



<pre class="wp-block-code"><code>npm run start</code></pre>



<p>すると、次のようなアドレスでウェブブラウザーで確認できます。</p>



<blockquote class="wp-block-quote"><p><div class="js-wp-oembed-blog-card wp-oembed-blog-card"><a class="js-wp-oembed-blog-card__link" href="http://localhost:3000/" target="_blank">http://localhost:3000/</a></div></p></blockquote>



<figure class="wp-block-image size-large"><img data-attachment-id="1746" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-15-5/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-15" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1746" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-15.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>こうして、変更→ビルド→プレビューを繰り返しながら開発していきます。とはいえ、少しの変更のたびにビルド作業を行うのは大変です。そこで、このビルドを自動で行える「開発サーバー」を利用すると良いでしょう。</p>



<p>一旦、プレビューサーバーを終了しましょう。これには、「Ctrl＋C（Win /Macとも）」キーを入力します。</p>


<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-7150380587227549"
     data-ad-slot="3618006766"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>



<h3 id="開発サーバーを起動しよう">開発サーバーを起動しよう</h3>



<p>開発サーバーは、次のコマンドで実行します。</p>



<pre class="wp-block-code"><code>npm run dev</code></pre>



<p>これで同じく、次のアドレスで表示できます。</p>



<blockquote class="wp-block-quote"><p><div class="js-wp-oembed-blog-card wp-oembed-blog-card"><a class="js-wp-oembed-blog-card__link" href="http://localhost:3000/" target="_blank">http://localhost:3000/</a></div></p></blockquote>



<p>開発サーバーはビルド作業を行わなくても、変更が常に反映されます。ただし、このままでは公開はできないため、完成したらビルド作業をしてからプレビューで最終確認をし、公開するという作業の流れになります。後ほど実際にやっていきましょう。</p>



<h2 id="ページを制作しよう">ページを制作しよう</h2>



<p>それでは、Next.jsでページを制作していきましょう。今は、サンプル用のトップページが表示されているため、これをオリジナルの内容に置き換えましょう。</p>



<p>次のファイルを開いて、あらかじめ記載されている内容はすべて削除しましょう。</p>



<blockquote class="wp-block-quote"><p>/pages/index.js</p></blockquote>



<p>そしたら、代わりに次のように入力します。</p>



<pre class="wp-block-code"><code>export default function Home() {
  return (
    &lt;h1&gt;ともすた&lt;/h1&gt;
  )
}</code></pre>



<p>これで、画面には見出しが表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1747" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-16-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-16" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1747" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-16.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>先の通り、Next.jsでは画面に表示するファイルを「pages」フォルダーで管理します。そして、「index.js」というファイルが、ウェブサイトのトップページになるという決まりがあります。そのため、トップページを編集したい場合は、「index.js」を編集しましょう。</p>



<p>記述する内容ですが、HTML 1行以外は、ほぼ Next.js（JavaScript）の決まり文句です。「export default function」とは、記述した内容を他の JavaScriptファイルから読み込めるようにするための記述で、ここでは「Home」という名前をつけて定義しました。この名前はなんでも良いですが、トップページは「Home」としておくと良いでしょう。</p>



<p>定義の中では「return」の中で HTMLを記述することで、画面に表示する内容を構築することができます。ただ実は、ここに記述されているのは HTML自体ではなく「JSX」という、JavaScript内に HTMLを構築するための独自言語です。HTMLとは、少し違う部分があるため、気をつけて書き換えなければなりません。</p>



<h3 id="1つの要素にまとめよう">1つの要素にまとめよう</h3>



<p>JSXでは、要素を1つしか返すことができません。次のように、h1と pを返そうとするとエラーになってしまいます。</p>



<pre class="wp-block-code"><code>return (
  &lt;h1&gt;ともすた&lt;/h1&gt;
  &lt;p&gt;学ぶ。をちゃんと&lt;/p&gt;
)</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="1748" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-17-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-17" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1748" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-17.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そこで、全体を divタグなどで囲ってあげる必要があります。</p>



<pre class="wp-block-code"><code>return (
  &lt;div&gt;
    &lt;h1&gt;ともすた&lt;/h1&gt;
    &lt;p&gt;学ぶ。をちゃんと&lt;/p&gt;
  &lt;/div&gt;
)</code></pre>



<p>ただし、このようにすると無用な div要素が追加されてしまいます。そこで、JSXでは次のような記述が利用できます。</p>



<pre class="wp-block-code"><code>return (
  &lt;&gt;
    &lt;h1&gt;ともすた&lt;/h1&gt;
    &lt;p&gt;学ぶ。をちゃんと&lt;/p&gt;
  &lt;/&gt;
)</code></pre>



<p>これで、1つの要素にまとめながら、無用な要素を生成しないようにできます。</p>



<h3 id="class属性は-classnameに">class属性は classNameに</h3>



<p></p>



<p>class属性はそのまま利用できないため、「className」という記述に変更します（Nは大文字なので気をつけましょう）。これは、JavaScriptに「class」という記述が使われている（予約語と言います）ためです。</p>



<pre class="wp-block-code"><code>&lt;h1 class="mytitle"&gt;ともすた&lt;/h1&gt;
↓
&lt;h1 className="mytitle"&gt;ともすた&lt;h1&gt;</code></pre>



<h3 id="インラインスタイルシートが利用できない">インラインスタイルシートが利用できない</h3>



<p>タグの中で直接 CSSを記述する、styleタグもそのままでは利用できません。次のように書き方がかなり変わります。</p>



<pre class="wp-block-code"><code>&lt;h1 style="color: red"&gt;ともすた&lt;/h1&gt;
↓
&lt;h1 style={{color: `red`}}"&gt;ともすた&lt;/h1&gt;</code></pre>



<p>その他にも、for属性が使えない（htmlForに書き換える必要があります）など、いくつかクセがあるため、都度紹介していきましょう。</p>


<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-7150380587227549"
     data-ad-slot="3618006766"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>



<h2 id="cssの書き方">CSSの書き方</h2>



<p>Next.jsや JSXではインラインの CSSの書き方が違っていたように、その他の CSSの書き方にも特徴があります。それぞれ紹介しましょう。</p>



<h3 id="インラインでcssを書く">インラインでCSSを書く</h3>



<figure class="wp-block-image size-large"><img data-attachment-id="1749" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-013/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.013" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1749" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.013.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>インラインCSSは先の通り、書き方が少し変わったほか「ハイフンが使えない」という特徴があります。例えば、次のような HTMLを考えましょう。</p>



<pre class="wp-block-code"><code>&lt;h1 style="background-color: red"&gt;見出し&lt;/h1&gt;</code></pre>



<p>このようなハイフンで区切られたプロパティの場合は「キャメル式」という方法で書き換える必要があります。これは、ハイフン直後のアルファベットを大文字にしてくっつけます。次のようになります。</p>



<pre class="wp-block-code"><code>&lt;h1 style={{backgroundColor: `red`}}&gt;見出し&lt;/h1&gt;</code></pre>



<p>「color」の cが大文字になり、ハイフンを取り除いてくっつけます。このほか、「borderBottom」「marginTop」などハイフン区切りのプロパティには注意しましょう。</p>



<h3 id="内部参照">内部参照</h3>



<figure class="wp-block-image size-large"><img data-attachment-id="1750" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-014/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.014" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1750" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.014.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>内部参照で CSSを記述する場合も注意が必要です。基本的には「style」タグがそのまま使えますが、少し書き加える必要があります。例えば、次のような CSSを記述してみましょう。「&lt;/&gt;」の直前に追加します。</p>



<pre class="wp-block-code"><code>&lt;style&gt;
  h1 {
    color: #fff;
  }
&lt;/style&gt;</code></pre>



<p>ここに、次のようにそれぞれ書き加えます。</p>



<pre class="wp-block-code"><code>&lt;style jsx&gt;{`<code>  h1 {
    color: #fff;
  }}</code>`}&lt;/style&gt;</code></pre>



<p>タグの最後に「jsx」という記述が増えたほか、全体を波かっことバッククオートで囲っています。これで、内部参照の CSSとして機能させることができます。CSSの記述は通常通りで、ハイフン区切りのプロパティなどもそのまま記述できるので便利でしょう。</p>



<h3 id="外部参照-cssモジュール">外部参照（CSSモジュール）</h3>



<figure class="wp-block-image size-large"><img data-attachment-id="1751" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-015/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.015" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1751" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.015.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>Next.jsでは外部参照の書き方もかなり独特です。CSSファイルは、あらかじめ準備されている「styles」フォルダーに準備しましょう。またここでは、ファイル名を「.module.css」にする必要があります。次のようなファイルを「/styles/home.module.css」として作成しましょう。</p>



<pre class="wp-block-code"><code>.mytitle {
  font-size: 5em;
}</code></pre>



<p>そして、使いたいファイルから読み込みます。「/pages/index.js」に次のように追加します。</p>



<pre class="wp-block-code"><code>import Styles from '../styles/home.module.css'</code></pre>



<p>そしたら、次のようにしてクラスを利用できます。通常の class属性としては使えないので気をつけましょう。</p>



<pre class="wp-block-code"><code>&lt;h1 className={Styles.mytitle}&gt;Title&lt;/h1&gt;</code></pre>



<p>これで、スタイルが適用されます。</p>



<h3 id="id-クラスセレクター以外が使えないので注意">ID/クラスセレクター以外が使えないので注意</h3>



<p>「.module.css」ファイルでは、セレクターにタグ名を使うセレクターなどは使えず、IDセレクターやクラスセレクターなどにする必要があります。要素セレクターなどを使う場合は、この後の「グローバルな CSS」を利用します。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1752" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-18-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-18" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1752" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-18.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="グローバルcssを利用する">グローバルCSSを利用する</h3>



<figure class="wp-block-image size-large"><img data-attachment-id="1753" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/nextjs-slide-016/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nextjs-slide.016" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1753" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/Nextjs-slide.016.jpeg?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>もっとも通常の CSSと同じように使えるのが、グローバルCSSです。次のように「/styles/mysite.css」というファイルを作成しましょう。</p>



<pre class="wp-block-code"><code>body {
  color: red;
}</code></pre>



<p>このファイルは、通常の CSSとして記述できます。ただし、各ページから読み込むことはできず、すべてのファイルに適用される「/pages/_app.js」で次のようにして読み込みます。</p>



<pre class="wp-block-code"><code>import '../styles/styles.css'</code></pre>



<p>これで、すべてのファイルに適用される CSSを記述できます。</p>



<h2 id="ページを増やそう">ページを増やそう</h2>



<p>Next.jsでページを増やしたい場合は、「/pages」フォルダーの中にパスに合わせたディレクトリーやファイルを作成します。例えばここでは、「/about」でアクセスできるページを作成しましょう。「about」ディレクトリーを作成します。</p>



<p>そしたら、index.jsには次のように記述しましょう。</p>



<pre class="wp-block-code"><code>export default function About() {
  return (
    &lt;&gt;
    &lt;h1&gt;About&lt;/h1&gt;
    &lt;/&gt;
  )
}</code></pre>



<p>これでファイルを保存すると、次のようなパスでアクセスできるようになります。</p>



<pre class="wp-block-code"><code>https:&#47;&#47;localhost:3000/about/</code></pre>



<figure class="wp-block-image size-large"><img data-attachment-id="1754" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-19-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-19" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1754" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-19.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h3 id="リンクを張ろう">リンクを張ろう</h3>



<p>Next.jsでリンクを張る場合は、通常の a要素を使うよりも「Linkコンポーネント」を利用した方が、後々便利です。</p>



<p>まずは、Linkコンポーネントをインポートします。</p>



<pre class="wp-block-code"><code>import Link from 'next/link'</code></pre>



<p>そして、「Link」という要素を作成しましょう。</p>



<pre class="wp-block-code"><code>&lt;Link href={`/`}&gt;&lt;a&gt;トップへ&lt;/a&gt;&lt;/Link&gt;</code></pre>



<p>これで a要素が出力されます。空の a要素があることに気をつけましょう。ここには、「どのような要素でリンクを作りたいか」を指定します。例えば、button要素で作りたい場合は次のように記述します。</p>



<pre class="wp-block-code"><code>&lt;Link href={`/`}&gt;&lt;button&gt;トップへ&lt;/button&gt;&lt;/Link&gt;</code></pre>



<p>実際にボタンが表示され、クリックするとページが遷移するという動きも自動的に作られます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1755" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-20-4/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-20" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1755" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-20.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="オリジナルコンポーネントを作ろう">オリジナルコンポーネントを作ろう</h2>



<p>コンポーネントは、自分で作成することもできます。ウェブサイトで共通して使うヘッダーやナビゲーションなどをコンポーネント化しておけば、一元管理ができて便利でしょう。まずは、「/pages」にコンポーネントを作成します。管理用にディレクトリーを作っておくと良いでしょう。「/pages/components/header.js」というファイルを作って、次のように書き込みます。</p>



<pre class="wp-block-code"><code>export default function Header(props) {
    return (
        &lt;h1&gt;{props.title}&lt;/h1&gt;
    )
}</code></pre>



<p>そしたら、このコンポーネントを使いたいファイル（/pages/index.js）で次のように取り込みましょう。</p>



<pre class="wp-block-code"><code>import Header from './components/header'</code></pre>



<p>これで「Header」が利用できるようになります。またこの時、次のように属性のようにパラメーターを渡すことができます。</p>



<pre class="wp-block-code"><code>&lt;Header title={`ともすた`}&gt;&lt;/Header&gt;</code></pre>



<p>渡されたパラメーターは、「props」というオブジェクトで取得され、次のようにしてコンポーネント内で利用できます。</p>



<pre class="wp-block-code"><code>&lt;h1&gt;{props.title}&lt;/h1&gt;</code></pre>



<h2 id="レイアウトを使おう">レイアウトを使おう</h2>



<p>コンポーネントと似たもので、ヘッダーやフッターなどページ全体の共通パーツを扱える「レイアウト」というものも利用できます。次のようなファイルを「/pages/components/content.js」に作成しましょう。</p>



<pre class="wp-block-code"><code>export default function Content({ children }) {
    return (
      &lt;&gt;
      &lt;div className="container"&gt;
        { children }
       &lt;/div&gt;
       &lt;hr /&gt;
       &lt;footer&gt;©︎ 2021 ともすた&lt;/footer&gt;
       &lt;/&gt;
    )
}</code></pre>



<p>ポイントは「{children}」という記述です。ここに、実際のコンテンツの内容を入れ込むことができます。レイアウトを使う場合は、次のようにして読み込んで、全体を囲うように要素を使います。</p>



<pre class="wp-block-code"><code>import Content from './components/content'

return (
  &lt;Content&gt;
    ...
  &lt;/Content&gt;
)</code></pre>



<p>これで、要素の中に記述した内容が差し込まれます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1728" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-50/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1728" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<h2 id="swrで-jsonデータを取得しよう">SWRで JSONデータを取得しよう</h2>



<p>Next.jsが真価を発揮するのは、外部のデータとやりとりをしながらダイナミックなウェブシステムを制作する時です。Next.jsでは、いくつかの方法で外部データとやりとりができますが、SWRというモジュールを使うと簡単なので、ここではこのやり方を紹介しましょう。</p>



<h3 id="jsonデータを準備しよう">JSONデータを準備しよう</h3>



<p>Next.jsのプロジェクトでは、あらかじめ次の場所に JSONのサンプルが準備されています。次のアドレスを表示してみましょう。</p>



<blockquote class="wp-block-quote"><p><div class="js-wp-oembed-blog-card wp-oembed-blog-card"><a class="js-wp-oembed-blog-card__link" href="http://localhost:3000/api/hello" target="_blank">http://localhost:3000/api/hello</a></div></p></blockquote>



<p>すると、次のように JSONデータが表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1730" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-1-14/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1730" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-1.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これは、「/pages/api/hello.js」というファイルで出力されています。これを次のような内容に変更して、ファイル名を「message.js」に変えておきましょう。</p>



<pre class="wp-block-code"><code>export default function handler(req, res) {
  res.status(200).json({
    message: "学ぶ。をちゃんと"
  })
}</code></pre>



<h3 id="swrをインストールしよう">SWRをインストールしよう</h3>



<p>SWRは標準では利用できないので、ターミナルから次のコマンドでインストールしましょう。</p>



<pre class="wp-block-code"><code>npm install swr --save-dev</code></pre>



<p>そしたら、「/pages/index.js」でこれを取り込みます。</p>



<pre class="wp-block-code"><code>import useSWR from 'swr'</code></pre>



<p>そして、プログラムの冒頭で次のようなプログラムを作成します。</p>



<pre class="wp-block-code"><code>let title = 'ともすた'

// ここから追加
const {data, error} = useSWR('/api/message')
if (error) return &lt;div&gt;failed to load&lt;/div&gt;
if (!data) return &lt;div&gt;loading...&lt;/div&gt;

&lt;p&gt;{data.message}&lt;/p&gt;</code></pre>



<p>追加した if構文は、JSONが正しく返ってこなかった場合や、通信が終わっていない時などに画面上にエラーメッセージを表示して処理を終了するためのものです。メッセージの内容は変えることができます。</p>



<p>こうすると、メッセージ部分が JSONからのデータに変更されました。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1731" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-2-12/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1731" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-2.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>JSONを変更すれば、メッセージの内容も書き換わるようになります。</p>



<h2 id="vercelにデプロイ-公開-しよう">Vercelにデプロイ（公開）しよう</h2>



<p>Next.jsで作成したプログラムは、Node.jsに対応したウェブサーバーで動作させることができます。また、エクスポートを使えば、HTMLファイルとしてレンタルサーバーなどにアップロードする必要があります（ただし、SWRを使ったプログラムなどの場合は工夫が必要なので、今回の記事のプログラムは動作しません）。</p>



<p>ここでは、Next.jsの開発元が運用している「Vercel」というサーバーにアップロードして公開してみましょう。個人利用であれば無償のプランもあります。</p>



<h3 id="vercelと-githubを連携しよう">Vercelと GitHubを連携しよう</h3>



<p>Vercelにアカウントを作成しますが、GitHubのアカウントがあれば連携させることができます。GitLabや Bitbucketでも連携可能で、メールアドレスなどでも作成できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1732" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-3-10/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1732" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-3.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>GitHubと連携すると、GitHubのリポジトリーが表示されるようになります。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1733" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-4-8/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1733" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-4.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これで連携完了です。</p>



<h3 id="githubにリポジトリーを作ろう">GitHubにリポジトリーを作ろう</h3>



<p>続いて、Vercelに公開するための GitHubリポジトリーを作成します。適当な名前のリポジトリーを作成しましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1734" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-5-9/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1734" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-5.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>そしたら、このリポジトリーにコミット・プッシュを行いましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1735" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-6-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-6" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1735" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-6.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これでデプロイの準備が完了です。</p>



<h3 id="vercelで取り込もう">Vercelで取り込もう</h3>



<p>この状態で Vercelに戻ると、今作成したリポジトリーが表示されます。「Import」ボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1736" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-7-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-7" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1736" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-7.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>チームで制作するかの選択や、プロジェクト名などを設定したら「Deploy」ボタンをクリックします。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1737" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-8-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-8" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1737" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-8.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>これで、Vercel上でビルド作業が始まり、公開手続きが行われます。ビルドに失敗するとエラーメッセージが表示されるため、エラーを取り除いて再度プッシュし、Deployボタンをクリックしましょう。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1738" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-9-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-9" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1738" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-9.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>正しくビルドが行われると、完了画面が表示されます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1739" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-10-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-10" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1739" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-10.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>「Visit」ボタンをクリックすると、実際にサイトを確認できます。</p>



<figure class="wp-block-image size-large"><img data-attachment-id="1740" data-permalink="https://tomosta.jp/article/nextjs-basic/attachment/image-11-7/" data-orig-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?fit=1920%2C1080&amp;ssl=1" data-orig-size="1920,1080" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-11" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?fit=1024%2C576&amp;ssl=1" loading="lazy" width="1024" height="576" src="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?resize=1024%2C576&#038;ssl=1" alt="" class="wp-image-1740" srcset="https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/tomosta.jp/wp-content/uploads/2021/07/image-11.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1" /></figure>



<p>現在は、vercel.appという仮ドメインですが、実際のドメイン名を割り当てることなども可能です。</p>



<p>Next.jsを利用すれば、本格的なウェブサイトを開発することができます。まだまだ奥が深いので、本サイトでも引き続き Next.jsを使った記事を今後更新していく予定です。</p>The post <a href="https://tomosta.jp/article/nextjs-basic/">Next.js超入門 – セットアップからVercelへの公開まで</a> first appeared on <a href="https://tomosta.jp">ともすた</a>.]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1722</post-id>	</item>
	</channel>
</rss>